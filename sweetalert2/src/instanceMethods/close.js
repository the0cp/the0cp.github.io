import{undoScrollbar}from"../utils/scrollbarFix.js";import{undoIOSfix}from"../utils/iosFix.js";import{undoIEfix}from"../utils/ieFix.js";import{unsetAriaHidden}from"../utils/aria.js";import*as dom from"../utils/dom/index.js";import{swalClasses}from"../utils/classes.js";import globalState,{restoreActiveElement}from"../globalState.js";import privateProps from"../privateProps.js";import privateMethods from"../privateMethods.js";function removePopupAndResetState(e,o,s,t){s?triggerDidCloseAndDispose(e,t):(restoreActiveElement().then((()=>triggerDidCloseAndDispose(e,t))),globalState.keydownTarget.removeEventListener("keydown",globalState.keydownHandler,{capture:globalState.keydownListenerCapture}),globalState.keydownHandlerAdded=!1),o.parentNode&&!document.body.getAttribute("data-swal2-queue-step")&&o.parentNode.removeChild(o),dom.isModal()&&(undoScrollbar(),undoIOSfix(),undoIEfix(),unsetAriaHidden()),removeBodyClasses()}function removeBodyClasses(){dom.removeClass([document.documentElement,document.body],[swalClasses.shown,swalClasses["height-auto"],swalClasses["no-backdrop"],swalClasses["toast-shown"],swalClasses["toast-column"]])}export function close(e){const o=dom.getPopup();if(!o)return;e=prepareResolveValue(e);const s=privateProps.innerParams.get(this);if(!s||dom.hasClass(o,s.hideClass.popup))return;const t=privateMethods.swalPromiseResolve.get(this);dom.removeClass(o,s.showClass.popup),dom.addClass(o,s.hideClass.popup);const a=dom.getContainer();dom.removeClass(a,s.showClass.backdrop),dom.addClass(a,s.hideClass.backdrop),handlePopupAnimation(this,o,s),t(e)}const prepareResolveValue=e=>void 0===e?{isConfirmed:!1,isDenied:!1,isDismissed:!0}:Object.assign({isConfirmed:!1,isDenied:!1,isDismissed:!1},e),handlePopupAnimation=(e,o,s)=>{const t=dom.getContainer(),a=dom.animationEndEvent&&dom.hasCssAnimation(o),{onClose:i,onAfterClose:l,willClose:n,didClose:d}=s;runDidClose(o,n,i),a?animatePopup(e,o,t,d||l):removePopupAndResetState(e,t,dom.isToast(),d||l)},runDidClose=(e,o,s)=>{null!==o&&"function"==typeof o?o(e):null!==s&&"function"==typeof s&&s(e)},animatePopup=(e,o,s,t)=>{globalState.swalCloseEventFinishedCallback=removePopupAndResetState.bind(null,e,s,dom.isToast(),t),o.addEventListener(dom.animationEndEvent,(function(e){e.target===o&&(globalState.swalCloseEventFinishedCallback(),delete globalState.swalCloseEventFinishedCallback)}))},triggerDidCloseAndDispose=(e,o)=>{setTimeout((()=>{"function"==typeof o&&o(),e._destroy()}))};export{close as closePopup,close as closeModal,close as closeToast};