import{getTimerProgressBar,getConfirmButton,getDenyButton,getCancelButton}from"./getters.js";import{swalClasses,iconTypes}from"../classes.js";import{toArray,objectValues,warn}from"../utils.js";export const states={previousBodyPadding:null};export const setInnerHtml=(t,e)=>{if(t.textContent="",e){const s=(new DOMParser).parseFromString(e,"text/html");toArray(s.querySelector("head").childNodes).forEach((e=>{t.appendChild(e)})),toArray(s.querySelector("body").childNodes).forEach((e=>{t.appendChild(e)}))}};export const hasClass=(t,e)=>{if(!e)return!1;const s=e.split(/\s+/);for(let e=0;e<s.length;e++)if(!t.classList.contains(s[e]))return!1;return!0};const removeCustomClasses=(t,e)=>{toArray(t.classList).forEach((s=>{objectValues(swalClasses).includes(s)||objectValues(iconTypes).includes(s)||objectValues(e.showClass).includes(s)||t.classList.remove(s)}))};export const applyCustomClass=(t,e,s)=>{if(removeCustomClasses(t,e),e.customClass&&e.customClass[s]){if("string"!=typeof e.customClass[s]&&!e.customClass[s].forEach)return warn(`Invalid type of customClass.${s}! Expected string or iterable object, got "${typeof e.customClass[s]}"`);addClass(t,e.customClass[s])}};export function getInput(t,e){if(!e)return null;switch(e){case"select":case"textarea":case"file":return getChildByClass(t,swalClasses[e]);case"checkbox":return t.querySelector(`.${swalClasses.checkbox} input`);case"radio":return t.querySelector(`.${swalClasses.radio} input:checked`)||t.querySelector(`.${swalClasses.radio} input:first-child`);case"range":return t.querySelector(`.${swalClasses.range} input`);default:return getChildByClass(t,swalClasses.input)}}export const focusInput=t=>{if(t.focus(),"file"!==t.type){const e=t.value;t.value="",t.value=e}};export const toggleClass=(t,e,s)=>{t&&e&&("string"==typeof e&&(e=e.split(/\s+/).filter(Boolean)),e.forEach((e=>{t.forEach?t.forEach((t=>{s?t.classList.add(e):t.classList.remove(e)})):s?t.classList.add(e):t.classList.remove(e)})))};export const addClass=(t,e)=>{toggleClass(t,e,!0)};export const removeClass=(t,e)=>{toggleClass(t,e,!1)};export const getChildByClass=(t,e)=>{for(let s=0;s<t.childNodes.length;s++)if(hasClass(t.childNodes[s],e))return t.childNodes[s]};export const applyNumericalStyle=(t,e,s)=>{s===`${parseInt(s)}`&&(s=parseInt(s)),s||0===parseInt(s)?t.style[e]="number"==typeof s?`${s}px`:s:t.style.removeProperty(e)};export const show=(t,e="flex")=>{t.style.display=e};export const hide=t=>{t.style.display="none"};export const setStyle=(t,e,s,o)=>{const r=t.querySelector(e);r&&(r.style[s]=o)};export const toggle=(t,e,s)=>{e?show(t,s):hide(t)};export const isVisible=t=>!(!t||!(t.offsetWidth||t.offsetHeight||t.getClientRects().length));export const allButtonsAreHidden=()=>!isVisible(getConfirmButton())&&!isVisible(getDenyButton())&&!isVisible(getCancelButton());export const isScrollable=t=>!!(t.scrollHeight>t.clientHeight);export const hasCssAnimation=t=>{const e=window.getComputedStyle(t),s=parseFloat(e.getPropertyValue("animation-duration")||"0"),o=parseFloat(e.getPropertyValue("transition-duration")||"0");return s>0||o>0};export const contains=(t,e)=>{if("function"==typeof t.contains)return t.contains(e)};export const animateTimerProgressBar=(t,e=!1)=>{const s=getTimerProgressBar();isVisible(s)&&(e&&(s.style.transition="none",s.style.width="100%"),setTimeout((()=>{s.style.transition=`width ${t/1e3}s linear`,s.style.width="0%"}),10))};export const stopTimerProgressBar=()=>{const t=getTimerProgressBar(),e=parseInt(window.getComputedStyle(t).width);t.style.removeProperty("transition"),t.style.width="100%";const s=parseInt(window.getComputedStyle(t).width),o=parseInt(e/s*100);t.style.removeProperty("transition"),t.style.width=`${o}%`};