import*as dom from"./index.js";import{swalClasses}from"../classes.js";import{getChildByClass}from"./domUtils.js";import{asPromise,error,hasToPromiseFn,isPromise}from"../utils.js";import{showLoading}from"../../staticMethods/showLoading.js";export const handleInputOptionsAndValue=(e,t)=>{"select"===t.input||"radio"===t.input?handleInputOptions(e,t):["text","email","number","tel","textarea"].includes(t.input)&&(hasToPromiseFn(t.inputValue)||isPromise(t.inputValue))&&handleInputValue(e,t)};export const getInputValue=(e,t)=>{const o=e.getInput();if(!o)return null;switch(t.input){case"checkbox":return getCheckboxValue(o);case"radio":return getRadioValue(o);case"file":return getFileValue(o);default:return t.inputAutoTrim?o.value.trim():o.value}};const getCheckboxValue=e=>e.checked?1:0,getRadioValue=e=>e.checked?e.value:null,getFileValue=e=>e.files.length?null!==e.getAttribute("multiple")?e.files:e.files[0]:null,handleInputOptions=(e,t)=>{const o=dom.getContent(),n=e=>populateInputOptions[t.input](o,formatInputOptions(e),t);hasToPromiseFn(t.inputOptions)||isPromise(t.inputOptions)?(showLoading(),asPromise(t.inputOptions).then((t=>{e.hideLoading(),n(t)}))):"object"==typeof t.inputOptions?n(t.inputOptions):error("Unexpected type of inputOptions! Expected object, Map or Promise, got "+typeof t.inputOptions)},handleInputValue=(e,t)=>{const o=e.getInput();dom.hide(o),asPromise(t.inputValue).then((n=>{o.value="number"===t.input?parseFloat(n)||0:`${n}`,dom.show(o),o.focus(),e.hideLoading()})).catch((t=>{error(`Error in inputValue promise: ${t}`),o.value="",dom.show(o),o.focus(),e.hideLoading()}))},populateInputOptions={select:(e,t,o)=>{const n=getChildByClass(e,swalClasses.select),s=(e,t,n)=>{const s=document.createElement("option");s.value=n,dom.setInnerHtml(s,t),s.selected=isSelected(n,o.inputValue),e.appendChild(s)};t.forEach((e=>{const t=e[0],o=e[1];if(Array.isArray(o)){const e=document.createElement("optgroup");e.label=t,e.disabled=!1,n.appendChild(e),o.forEach((t=>s(e,t[1],t[0])))}else s(n,o,t)})),n.focus()},radio:(e,t,o)=>{const n=getChildByClass(e,swalClasses.radio);t.forEach((e=>{const t=e[0],s=e[1],i=document.createElement("input"),a=document.createElement("label");i.type="radio",i.name=swalClasses.radio,i.value=t,isSelected(t,o.inputValue)&&(i.checked=!0);const l=document.createElement("span");dom.setInnerHtml(l,s),l.className=swalClasses.label,a.appendChild(i),a.appendChild(l),n.appendChild(a)}));const s=n.querySelectorAll("input");s.length&&s[0].focus()}},formatInputOptions=e=>{const t=[];return"undefined"!=typeof Map&&e instanceof Map?e.forEach(((e,o)=>{let n=e;"object"==typeof n&&(n=formatInputOptions(n)),t.push([o,n])})):Object.keys(e).forEach((o=>{let n=e[o];"object"==typeof n&&(n=formatInputOptions(n)),t.push([o,n])})),t},isSelected=(e,t)=>t&&t.toString()===e.toString();