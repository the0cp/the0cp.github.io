import{swalClasses}from"../../classes.js";import{warn,error,isPromise}from"../../utils.js";import*as dom from"../../dom/index.js";import privateProps from"../../../privateProps.js";const inputTypes=["input","file","range","select","radio","checkbox","textarea"];export const renderInput=(e,t)=>{const n=dom.getContent(),s=privateProps.innerParams.get(e),r=!s||t.input!==s.input;inputTypes.forEach((e=>{const s=swalClasses[e],o=dom.getChildByClass(n,s);setAttributes(e,t.inputAttributes),o.className=s,r&&dom.hide(o)})),t.input&&(r&&showInput(t),setCustomClass(t))};const showInput=e=>{if(!renderInputType[e.input])return error(`Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "${e.input}"`);const t=getInputContainer(e.input),n=renderInputType[e.input](t,e);dom.show(n),setTimeout((()=>{dom.focusInput(n)}))},removeAttributes=e=>{for(let t=0;t<e.attributes.length;t++){const n=e.attributes[t].name;["type","value","style"].includes(n)||e.removeAttribute(n)}},setAttributes=(e,t)=>{const n=dom.getInput(dom.getContent(),e);if(n){removeAttributes(n);for(const s in t)"range"===e&&"placeholder"===s||n.setAttribute(s,t[s])}},setCustomClass=e=>{const t=getInputContainer(e.input);e.customClass&&dom.addClass(t,e.customClass.input)},setInputPlaceholder=(e,t)=>{e.placeholder&&!t.inputPlaceholder||(e.placeholder=t.inputPlaceholder)},setInputLabel=(e,t,n)=>{if(n.inputLabel){e.id=swalClasses.input;const s=document.createElement("label"),r=swalClasses["input-label"];s.setAttribute("for",e.id),s.className=r,dom.addClass(s,n.customClass.inputLabel),s.innerText=n.inputLabel,t.insertAdjacentElement("beforebegin",s)}},getInputContainer=e=>{const t=swalClasses[e]?swalClasses[e]:swalClasses.input;return dom.getChildByClass(dom.getContent(),t)},renderInputType={};renderInputType.text=renderInputType.email=renderInputType.password=renderInputType.number=renderInputType.tel=renderInputType.url=(e,t)=>("string"==typeof t.inputValue||"number"==typeof t.inputValue?e.value=t.inputValue:isPromise(t.inputValue)||warn(`Unexpected type of inputValue! Expected "string", "number" or "Promise", got "${typeof t.inputValue}"`),setInputLabel(e,e,t),setInputPlaceholder(e,t),e.type=t.input,e),renderInputType.file=(e,t)=>(setInputLabel(e,e,t),setInputPlaceholder(e,t),e),renderInputType.range=(e,t)=>{const n=e.querySelector("input"),s=e.querySelector("output");return n.value=t.inputValue,n.type=t.input,s.value=t.inputValue,setInputLabel(n,e,t),e},renderInputType.select=(e,t)=>{if(e.textContent="",t.inputPlaceholder){const n=document.createElement("option");dom.setInnerHtml(n,t.inputPlaceholder),n.value="",n.disabled=!0,n.selected=!0,e.appendChild(n)}return setInputLabel(e,e,t),e},renderInputType.radio=e=>(e.textContent="",e),renderInputType.checkbox=(e,t)=>{const n=dom.getInput(dom.getContent(),"checkbox");n.value=1,n.id=swalClasses.checkbox,n.checked=Boolean(t.inputValue);const s=e.querySelector("span");return dom.setInnerHtml(s,t.inputPlaceholder),e},renderInputType.textarea=(e,t)=>{e.value=t.inputValue,setInputPlaceholder(e,t),setInputLabel(e,e,t);const n=e=>parseInt(window.getComputedStyle(e).paddingLeft)+parseInt(window.getComputedStyle(e).paddingRight);if("MutationObserver"in window){const t=parseInt(window.getComputedStyle(dom.getPopup()).width);new MutationObserver((()=>{const s=e.offsetWidth+n(dom.getPopup())+n(dom.getContent());dom.getPopup().style.width=s>t?`${s}px`:null})).observe(e,{attributes:!0,attributeFilter:["style"]})}return e};