import defaultParams from"./params.js";import{toArray,capitalizeFirstLetter,warn}from"./utils.js";const swalStringParams=["swal-title","swal-html","swal-footer"];export const getTemplateParams=t=>{const e="string"==typeof t.template?document.querySelector(t.template):t.template;if(!e)return{};const r=e.content||e;showWarningsForElements(r);return Object.assign(getSwalParams(r),getSwalButtons(r),getSwalImage(r),getSwalIcon(r),getSwalInput(r),getSwalStringParams(r,swalStringParams))};const getSwalParams=t=>{const e={};return toArray(t.querySelectorAll("swal-param")).forEach((t=>{showWarningsForAttributes(t,["name","value"]);const r=t.getAttribute("name");let a=t.getAttribute("value");"boolean"==typeof defaultParams[r]&&"false"===a&&(a=!1),"object"==typeof defaultParams[r]&&(a=JSON.parse(a)),e[r]=a})),e},getSwalButtons=t=>{const e={};return toArray(t.querySelectorAll("swal-button")).forEach((t=>{showWarningsForAttributes(t,["type","color","aria-label"]);const r=t.getAttribute("type");e[`${r}ButtonText`]=t.innerHTML,e[`show${capitalizeFirstLetter(r)}Button`]=!0,t.hasAttribute("color")&&(e[`${r}ButtonColor`]=t.getAttribute("color")),t.hasAttribute("aria-label")&&(e[`${r}ButtonAriaLabel`]=t.getAttribute("aria-label"))})),e},getSwalImage=t=>{const e={},r=t.querySelector("swal-image");return r&&(showWarningsForAttributes(r,["src","width","height","alt"]),r.hasAttribute("src")&&(e.imageUrl=r.getAttribute("src")),r.hasAttribute("width")&&(e.imageWidth=r.getAttribute("width")),r.hasAttribute("height")&&(e.imageHeight=r.getAttribute("height")),r.hasAttribute("alt")&&(e.imageAlt=r.getAttribute("alt"))),e},getSwalIcon=t=>{const e={},r=t.querySelector("swal-icon");return r&&(showWarningsForAttributes(r,["type","color"]),r.hasAttribute("type")&&(e.icon=r.getAttribute("type")),r.hasAttribute("color")&&(e.iconColor=r.getAttribute("color")),e.iconHtml=r.innerHTML),e},getSwalInput=t=>{const e={},r=t.querySelector("swal-input");r&&(showWarningsForAttributes(r,["type","label","placeholder","value"]),e.input=r.getAttribute("type")||"text",r.hasAttribute("label")&&(e.inputLabel=r.getAttribute("label")),r.hasAttribute("placeholder")&&(e.inputPlaceholder=r.getAttribute("placeholder")),r.hasAttribute("value")&&(e.inputValue=r.getAttribute("value")));const a=t.querySelectorAll("swal-input-option");return a.length&&(e.inputOptions={},toArray(a).forEach((t=>{showWarningsForAttributes(t,["value"]);const r=t.getAttribute("value"),a=t.innerHTML;e.inputOptions[r]=a}))),e},getSwalStringParams=(t,e)=>{const r={};for(const a in e){const o=e[a],n=t.querySelector(o);n&&(showWarningsForAttributes(n,[]),r[o.replace(/^swal-/,"")]=n.innerHTML)}return r},showWarningsForElements=t=>{const e=swalStringParams.concat(["swal-param","swal-button","swal-image","swal-icon","swal-input","swal-input-option"]);toArray(t.querySelectorAll("*")).forEach((t=>{const r=t.tagName.toLowerCase();-1===e.indexOf(r)&&warn(`Unrecognized element <${r}>`)}))},showWarningsForAttributes=(t,e)=>{toArray(t.attributes).forEach((r=>{-1===e.indexOf(r.name)&&warn([`Unrecognized attribute "${r.name}" on <${t.tagName.toLowerCase()}>.`,""+(e.length?`Allowed attributes are: ${e.join(", ")}`:"To set the value, use HTML within the element.")])}))};